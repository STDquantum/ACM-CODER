#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f,MAXN = 50+10, MAXM = MAXN*MAXN,MAXD = 10000+10;
double dp[MAXD][MAXN];
int head[MAXN],tol,nxt[MAXM],to[MAXM],sz[MAXN],cnt[MAXM];
int n,d;

inline void add_edge(int u, int v)
{
	nxt[tol] = head[u], to[tol] = v;
	if(-1 == head[u]) cnt[tol] = 1;
	else cnt[tol] = cnt[head[u]]+1;
	sz[u] = cnt[tol];
	head[u] = tol++;
}
double sloved(int u)
{
	clc(dp,0);
	repe(i,1,n) if(i != u) dp[0][i] = 1.0/n;
	repe(i,1,d)
	{
		repe(j,1,n)
		{
			if(j == u) continue;
			for(int k = head[j]; ~k; k = nxt[k])
			{
				int v = to[k];
				if(v == u) continue;
				dp[i][j] += (dp[i-1][v])/sz[j];
			}
		}
	}
	double ans = 0;
	repe(i,1,n) if(i != u) ans += dp[d][i];
	return ans;
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int t;
	scanf("%d", &t);
	while(t--)
	{
		int m;
		scanf("%d%d%d",&n,&m,&d);
		clc(head,-1);
		tol = 0;
		rep(i,0,m)
		{
			int u,v;
			scanf("%d%d", &u,&v);
			add_edge(u,v);
			add_edge(v,u);
		}
		repe(i,1,n) printf("%.10f\n", sloved(i));
	}
	return 0;
}
