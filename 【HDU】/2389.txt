/* ***********************************************
Author :Darkangelwings  
Created Time :2014/10/24 ÐÇÆÚÎå 18:45:13
File Name :use.cpp
************************************************ */
#include <cstdio>
#include <cstring>
#include <cmath>
#include <map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
#define INF 0x3f3f3f3f
#define eps 1e-8
#define pi acos(-1.0)
typedef long long LL;
#define MAXN 3010
#define MAXM 9000100
struct Edge{
	int next, v;
	Edge(int a = 0, int b = 0){
		next = a, v = b;
	}
}edge[MAXM];
struct NODE{
	int x,y,s;
}p[MAXN];
int head[MAXN], tol, mx[MAXN], my[MAXN], dx[MAXN], dy[MAXN], n, dis;
bool vis[MAXN];

inline int get_dis(int a, int b, int c, int d){
	return (a-c)*(a-c)+(b-d)*(b-d);
}
void add_edge(int u, int v)
{
	edge[tol] = Edge(head[u], v);
	head[u] = tol++;
}
bool searchp(){
	queue<int> q;
	dis = INF;
	clc(dx,-1);
	clc(dy,-1);
	rep(i,0,n){
		if(mx[i] == -1){
			q.push(i);
			dx[i] = 0;
		}
	}
	while(!q.empty()){
		int u = q.front();q.pop();
		if(dx[u] > dis) break;
		for(int i = head[u]; ~i;i = edge[i].next){
			int v = edge[i].v;
			if(dy[v] == -1){
				dy[v] = dx[u]+1;
				if(-1 == my[v]) dis = dy[v];
				else{
					dx[my[v]] = dy[v]+1;
					q.push(my[v]);
				}
			}
		}
	}
	return dis != INF;
}
bool dfs(int u){
	for(int i = head[u]; ~i;i = edge[i].next){
		int v = edge[i].v;
		if(!vis[v] && dy[v] == dx[u]+1){
			vis[v] = true;
			if(~my[v] && dy[v] == dis) continue;
			if(my[v] == -1 || dfs(my[v])){
				my[v] = u;
				mx[u] = v;
				return true;
			}
		}
	}
	return false;
}
int maxmatch()
{
	int res = 0;
	clc(mx,-1);
	clc(my,-1);
	while(searchp()){
		clc(vis,0);
		rep(i,0,n){
			if(mx[i] == -1 && dfs(i)) res++;
		}
	}
	return res;
}
int main()
{
#ifdef SHY
    freopen("e:\\1.txt","r",stdin);
#endif
	int t,count = 0;
	scanf("%d%*c", &t);
	while(t--)
	{
		int m,a,b,c,time;
		clc(head,-1);
		tol = 0;
		scanf("%d%*c%d%*c", &time,&m);
		rep(i,0,m) scanf("%d %d %d%*c", &p[i].x,&p[i].y,&p[i].s);
		scanf("%d%*c", &n);
		rep(i,0,n)
		{
			scanf("%d %d%*c", &a, &b);
			rep(j,0,m){
				if(get_dis(a,b,p[j].x,p[j].y) <= (p[j].s*time)*(p[j].s*time))
				  add_edge(i,j);
			}
		}
		printf("Scenario #%d:\n%d\n\n", ++count,maxmatch());
	}
    return 0;
}
