#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define MAXN 100
struct NODE{
	int a, b, v;
	bool operator < (const NODE& t) { return v < t.v;}
}p[MAXN];
int f[30];

int find(int x){ return ~f[x] ? f[x] = find(f[x]):x;}
int main()
{
#ifdef SHY
    freopen("e:\\1.txt","r",stdin);
#endif
	int n;
	while(~scanf("%d%*c", &n) && n)
	{
		int m = 0, len, v;
		char ch, c;
		for(int i = 1; i < n; i++)
		{
			scanf("%c %d%*c", &ch, &len);
			ch -= 'A';
			for(int j = 0; j < len; j++)
			{
				scanf("%c %d%*c", &c, &v);
				p[m].a = ch, p[m].b = c-'A', p[m++].v = v;
			}
		}
		sort(p,p+m);
		int ans = 0;
		memset(f,-1,sizeof(f));
		for(int i = 0; i < m; i++)
		{
			int x = find(p[i].a), y = find(p[i].b);
			if(x != y) ans += p[i].v, f[y] = x;
		}
		printf("%d\n", ans);
	}
	return 0;
}