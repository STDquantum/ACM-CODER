#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 10, MAXM = 30;
int u[MAXM],v[MAXM],n,m,du[MAXN];

int cnt,col[MAXN][2];
bool ok(int a, int c)
{
	return col[a][c] < du[a];
}
bool can()
{
	repe(i,1,n) if(col[i][0] != col[i][1]) return false;
	return true;
}
void dfs(int p)
{
	if(p == m)
	{
		cnt += can();
		return;
	}
	if(ok(u[p],0) && ok(v[p],0))
	{
		col[u[p]][0]++,col[v[p]][0]++;
		dfs(p+1);
		col[u[p]][0]--,col[v[p]][0]--;
	}
	if(ok(u[p],1) && ok(v[p],1))
	{
		col[u[p]][1]++,col[v[p]][1]++;
		dfs(p+1);
		col[u[p]][1]--,col[v[p]][1]--;
	}
}
int sloved()
{
	repe(i,1,n)
	{
		if(du[i]&1) return 0;
		du[i] >>= 1;
	}
	cnt = 0;
	clc(col,0);
	dfs(0);
	return cnt;
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int t;
	scanf("%d", &t);
	while(t--)
	{
		scanf("%d %d", &n, &m);
		clc(du,0);
		rep(i,0,m)
			scanf("%d %d", &u[i],&v[i]),du[u[i]]++,du[v[i]]++;
		printf("%d\n",sloved());
	}
	return 0;
}
