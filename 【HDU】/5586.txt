#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
#include <bitset>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXIN = 10000, MAXN = 1e5+10;
char buf[MAXIN], *ps = buf, *pe = buf+1;
inline void rnext(){
	if(++ps == pe) pe = (ps = buf)+fread(buf,sizeof(char),sizeof(buf)/sizeof(char),stdin);
}
template <class T>
inline bool in(T &ans)
{
	ans = 0;
	T f = 1;
	if(ps == pe) return false;
	do{ rnext(); if('-' == *ps) f = -1;} while(!isdigit(*ps) && ps != pe);
	if(ps == pe) return false;
	do{ ans = (ans<<1)+(ans<<3)+*ps-48;rnext();}while(isdigit(*ps) && ps != pe);
	ans *= f;
	return true;
}
int a[MAXN],b[MAXN],sum[MAXN];

inline int f(int x)
{
	return (1890*x+143)%10007;
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int n;
	while(in(n))
	{
		int ans = 0;
		repe(i,1,n) in(a[i]), ans += a[i];
		repe(i,1,n)
		{
			b[i] = f(a[i]);
			sum[i] = sum[i-1]+b[i]-a[i];
		}
		int mi = 0, mx = -INF;
		repe(i,1,n)
		{
			mx = max(mx,sum[i]-mi);
			mi = min(mi,sum[i]);
		}
		if(mx > 0) printf("%d\n", ans+mx);
		else printf("%d\n", ans);
	}
	return 0;
}