#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <map>
//#include <unordered_map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 24+10;
int ansa[MAXN][MAXN], ansb[MAXN][MAXN];
int a[MAXN];
int n,m,p;

int b[MAXN];
void count()
{
	rep(i,0,n+m-1)
	{
		if(0 == b[i] && 1 == b[i+1]) p++;
	}
}
int cnt = 0;
void dfs(int sumn, int summ)
{
	if(sumn == n && summ == m)
	{
		count();
		cnt++;
		return;
	}
	if(sumn < n)
	{
		b[sumn+summ] = 1;
		dfs(sumn+1,summ);
	}
	if(summ < m)
	{
		b[sumn+summ] = 0;
		dfs(sumn,summ+1);
	}
}
int gcd(int a, int b)
{
	while(b)
	{
		a %= b;
		if(a < b) swap(a,b);
	}
	return a;
}
int main()
{
#ifdef SHY
	freopen("e:\\1.txt", "r", stdin);
#endif
	clc(ansa,-1);
	while(~scanf("%d %d%*c", &n, &m))
	{
		if(~ansa[n][m])
		{
			printf("%d/%d\n", ansa[n][m],ansb[n][m]);
			continue;
		}
		cnt = p = 0;
		dfs(0,0);
		int g = gcd(p,cnt);
		ansa[m][n] = ansa[n][m] = p/g, ansb[m][n] = ansb[n][m] = cnt/g;
		printf("%d/%d\n", p/g,cnt/g);
	}
	return 0;
}
