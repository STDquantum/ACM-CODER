#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 50000+10;
int sum[MAXN<<1];

inline int id(int x, int y){return x+y|x!=y;}
inline void push_up(int x, int y, int m)
{
	sum[id(x,y)] = sum[id(x,m)]+sum[id(m+1,y)];
}
void bulid(int x, int y)
{
	if(x == y)
	{
		sum[id(x,y)] = 1;
		return;
	}
	int m = (x+y)>>1;
	bulid(x,m);
	bulid(m+1,y);
	push_up(x,y,m);
}
void del(int x, int y, int p)
{
	if(x == y)
	{
		sum[id(x,y)] = 0;
		return;
	}
	int m = (x+y)>>1;
	if(p <= m) del(x,m,p);
	else del(m+1,y,p);
	push_up(x,y,m);
}
int query(int x, int y, int k)
{
	if(x == y) return x;
	int m = (x+y)>>1;
	if(sum[id(x,m)] < k) return query(m+1,y,k-sum[id(x,m)]);
	return query(x,m,k);
}
int a[MAXN],cnt[MAXN];

int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int t;
	scanf("%d", &t);
	while(t--)
	{
		int n;
		scanf("%d", &n);
		repe(i,1,n) scanf("%d", &cnt[i]);
		bulid(1,n);
		per(i,n,1)
		{
			a[i] = query(1,n,i-(cnt[i]-cnt[i-1]));
			del(1,n,a[i]);
		}
		repe(i,1,n) printf("%d%c",a[i],i == n?'\n':' ');
	}
	return 0;
}
