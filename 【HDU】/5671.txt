#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
#include <bitset>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>

using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 1000+10,MAXM = 1e5+10;
int a[MAXN][MAXN],ai[MAXN],aj[MAXN],numi[MAXN],numj[MAXN];
struct NODE{
    int op,x,y;
}p[MAXM];

int main()
{
#ifdef SHY
    freopen("d:\\1.txt", "r", stdin);
#endif
    int t;
    scanf("%d", &t);
    while(t--)
    {
        int n,m,q;
        scanf("%d%d%d", &n,&m,&q);
        repe(i,1,n)
        {
            repe(j,1,m)
            {
                scanf("%d",&a[i][j]);
            }
        }
        clc(ai,0);
        clc(aj,0);
        repe(i,1,n) numi[i] = i;
        repe(j,1,m) numj[j] = j;
        while(q--)
        {
            int op,x,y;
            scanf("%d%d%d", &op, &x,&y);
            if(1 == op){
                swap(numi[x],numi[y]);
            }
            else if(2 == op){
                swap(numj[x],numj[y]);
            }
            else if(3 == op){
                ai[numi[x]] += y;
            }
            else if(4 == op){
                aj[numj[x]] += y;
            }
        }
        repe(i,1,n)
        {
            repe(j,1,m)
            {
                printf("%d", a[numi[i]][numj[j]]+ai[numi[i]]+aj[numj[j]]);
                putchar(j == m?'\n':' ');
            }
        }

    }
    return 0;
}