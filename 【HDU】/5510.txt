#include <bits/stdc++.h>
using namespace std;
typedef unsigned long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 500+10,MAXM = 2000+10;
char s[MAXN][MAXM];
int len[MAXN];

int nt[MAXM];//nt[i]为满足x[i-z…i-1]=x[0…z-1]的最大z值(就是相同的最大前缀后缀)
void get_next(char *x, int m)//这个nt[i]表示nt’[i] = nt[nt[…nt[i]]]
{							
	int i = 0,j;
	j = nt[0] = -1;
	while(i < m)
	{
		while(~j && x[i] != x[j]) j = nt[j];
		if(x[++i] == x[++j]) nt[i] = nt[j];
		else nt[i] = j;
	}
}
//返回x在y中出现的次数,可以重叠
int kmp(char *x, int m, char *y, int n)//x是模式串,y是主串
{
	int i = 0,j = 0,ans = 0;
	get_next(x,m);
	while(i < n)
	{
		while(~j && y[i] != x[j]) j = nt[j];
		i++,j++;
		if(j == m)
		{
			ans++;
			return 1;
		}
	}
	return 0;
}
int del[MAXN],vis[MAXN];
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int t,count = 0;
	scanf("%d", &t);
	while(t--)
	{
		int n,ans = -1;
		scanf("%d", &n);
		clc(del,0);
		rep(i,0,n) vis[i] = 1;
		rep(i,0,n) scanf("%s", s[i]),len[i] = strlen(s[i]);
		rep(i,0,n)
		{
			int cnt = 0;
			rep(j,0,i)
			{
				if(del[j]) continue;
				if(kmp(s[j],len[j],s[i],len[i]))
				{
					del[j] = true;
					cnt += vis[j];
					vis[i] += vis[j];
				}
			}
			if(cnt != i)
			{
				ans = i+1;
				//break;
			}
		}
		printf("Case #%d: %d\n", ++count,ans);
	}
	return 0;
}
