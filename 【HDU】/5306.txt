#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 100+10, MAXM = 100+10;
int cnt[MAXN];
int head[MAXN],tol,to[MAXM],nxt[MAXM],du[MAXN];

void add_edge(int u, int v)
{
	nxt[tol] = head[u], to[tol] = v;
	head[u] = tol++;
}
int ans,k;
void dfs(int u)
{
	cnt[u] = 1;
	for(int i = head[u]; ~i; i = nxt[i])
	{
		int v = to[i];
		dfs(v);
		cnt[u] += cnt[v]; 
	}
	if(k == cnt[u]-1) ans++;
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int n;
	while(~scanf("%d %d", &n, &k))
	{
		clc(head,-1);
		tol = 0;
		clc(du,0);
		rep(i,1,n)
		{
			int u,v;
			scanf("%d %d", &u, &v);
			add_edge(u,v);
			du[v]++;
		}
		int rt = -1;
		repe(i,1,n)
		{
			if(!du[i])
			{
				rt = i;
				break;
			}
		}
		clc(cnt,0);
		ans = 0;
		dfs(rt);
		printf("%d\n", ans);
	}
	return 0;
}
