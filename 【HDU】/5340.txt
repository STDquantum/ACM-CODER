#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
#include <bitset>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 20000+10;
char buf[MAXN], *ps = buf, *pe = buf+1;
inline void rnext(){
	if(++ps == pe)
		pe = (ps = buf)+fread(buf,sizeof(char),sizeof(buf)/sizeof(char),stdin);
}
void in(char *ans)
{
	do{
		rnext();
	}while(!isalpha(*ps) && ps != pe);
	do{
		*ans = *ps;
		ans++;
		rnext();
	}while(isalpha(*ps) && ps != pe);
	*ans = 0;
}
int p[MAXN<<1]; //p[i]记录i为中心的回文串半径,添加#后p[i]-1就是原串的回文长度了
char s[MAXN<<1];//中间加上'#'后的串,下标1开始的

int st[MAXN],ed[MAXN];
int u[MAXN*5], v[MAXN*5], tol;
void manacher(char *a, int n)
{
	clc(st,0);clc(ed,0);tol = 0;
	//给原串加'#'
	int len = 0;
	s[len++] = '$';
	s[len++] = '#';
	rep(i,0,n)
	{
		s[len++] = a[i];
		s[len++] = '#';
	}
	s[len] = 0;
	//开始计算最长回文串
	int mx = 0, id = 0;
	rep(i,0,len)
	{
		p[i] = mx>i?min(p[id*2-i],mx-i):1;
		u[tol] = (i-p[i]+1)/2,v[tol] = (i+p[i]-1)/2-1;
		if('#' != s[i-p[i]+1]) u[tol]--;
		if(v[tol] >= u[tol])
			tol++;
		while(s[i+p[i]] == s[i-p[i]])
		{
			u[tol] = (i-p[i])/2,v[tol] = (i+p[i])/2-1;
			if('#' != s[i-p[i]]) u[tol]--;
			if(0 == u[tol])
				st[v[tol]] = 1;
			if(n-1 == v[tol])
				ed[u[tol]] = 1;
			tol++;
			p[i]++;
		}
		if(i+p[i] > mx)
		{
			mx = i+p[i];
			id = i;
		}
	}
	st[0] = ed[n-1] = 1;
	rep(i,0,n) u[tol] = i, v[tol++] = i;
}
char a[MAXN];

bool sloved(int len)
{
	rep(i,0,tol)
	{
		if(u[i]-1 >= 0 && v[i]+1 < len && st[u[i]-1] && ed[v[i]+1])
			return true;
	}
	return false;
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int t;
	scanf("%d", &t);
	while(t--)
	{
		clc(s,0);
		in(a);
		int len = strlen(a);
		manacher(a,len);
		if(sloved(len)) puts("Yes");
		else puts("No");
	}
	return 0;
}
