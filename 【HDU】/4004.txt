#include <stdio.h>
#include <algorithm>
using namespace std;
#define MAXN 500010
int n,m;
__int64 L, a[MAXN];

bool can(__int64 x)
{
	if (x*m < L)
		return false;
	int sum = 1;
	__int64 st = 0;
        for (int i = 0; i < n-1; i++)
	{
		if (a[i+1]-a[i] > x)
			return false;
		if (a[i+1]-st > x)
		{
                        sum++;
                        if (sum > m)
                                return false;
			st = a[i];
		}
	}
	if (a[n-1]-a[n-2] > x)
                return false;
	return true;
}
__int64 sloved()
{
        __int64 l = 1, r = L, mid;
        while(l <= r)
	{
                mid = (l+r)>>1;
                if (can(mid))
                        r = mid-1;
                else
			l = mid+1;
	}
	return r+1;
}
int main ()
{
	#ifdef SHY
	freopen("e:\\1.txt", "r", stdin);
	#endif
        while(~scanf ("%I64d %d %d%*c", &L, &n, &m))
	{
                for (int i = 0; i < n; i++)
                        scanf ("%I64d%*c", &a[i]);
		a[n++] = 0;
		sort(a,a+n);
                a[n++] = L;
		printf ("%I64d\n", sloved());
	}
        return 0;
}
