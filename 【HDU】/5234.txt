#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 100+10;
const int f[2][2]={{1,0},{0,1}};
int a[MAXN][MAXN], dp[MAXN][MAXN][MAXN][2],n,m,k;

int dfs(int x, int y, int w, bool eat)
{
    int &ans = dp[x][y][w][eat];
    if(~ans) return ans;
    if(x == n-1 && y == m-1)
    {
        return 0;
    }
    ans = 0;
    rep(i,0,2)
    {
        int ni = x+f[i][0], nj = y+f[i][1];
        if(0 <= ni && n > ni && 0 <= nj && m > nj)
        {
            int tmp = 0;
            if(w+a[ni][nj] <= k)
                tmp = dfs(ni,nj,w+a[ni][nj],1)+a[ni][nj];
            if(tmp <= k) ans = max(tmp,ans);
            tmp = dfs(ni,nj,w,0);
            if(tmp <= k) ans = max(tmp,ans);
        }
    }
    return ans;
}
int main()
{
#ifdef SHY
    freopen("d:\\1.txt", "r", stdin);
#endif
    while(~scanf("%d %d %d%*c", &n, &m, &k))
    {
        clc(dp,-1);
        rep(i,0,n)
        {
            rep(j,0,m)
                scanf("%d%*c", &a[i][j]);
        }
        int ans = dfs(0,0,0,0);
        //clc(dp,-1);
        int tmp = 0;
        if(a[0][0] <= k)
            tmp = dfs(0,0,a[0][0],1)+a[0][0];
        if(tmp <= k) ans = max(ans,tmp);
        printf("%d\n", ans);
    }
    return 0;
}