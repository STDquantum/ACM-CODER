#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 10000+10,MAXM = 100000*2+10;
int v[MAXN],head[MAXN],tol,nxt[MAXM],to[MAXM],du[MAXN];

inline void add_edge(int u, int v)
{
    nxt[tol] = head[u], to[tol] = v;
    head[u] = tol++;
}
bool del[MAXN];
void sloved(int n)
{
    queue<int> q;
    repe(i,1,n) if(du[i] < 2) q.push(i);
    while(!q.empty())
    {
        int u = q.front();q.pop();
        del[u] = true;
        for(int i = head[u]; ~i; i = nxt[i])
        {
            int v = to[i];
            du[v]--;
            if(!del[v] && du[v] < 2)
            {
                q.push(v);
            }
        }
    }
}

LL sum;
int cnt;
bool vis[MAXN];
void dfs(int u)
{
    vis[u] = true;
    cnt++;
    sum += v[u];
    for(int i = head[u]; ~i; i = nxt[i])
    {
        int v = to[i];
        if(del[v] || vis[v]) continue;
        dfs(v);
    }
}
int main()
{
#ifdef SHY
    freopen("d:\\1.txt", "r", stdin);
#endif
    int t;
    scanf("%d", &t);
    while(t--)
    {
        int n,m;
        scanf("%d %d", &n, &m);
        repe(i,1,n) scanf("%d", &v[i]);
        clc(head,-1);tol = 0;
        clc(du,0);
        rep(i,0,m)
        {
            int u,v;
            scanf("%d%d", &u, &v);
            add_edge(u,v);
            add_edge(v,u);
            du[u]++;du[v]++;
        }
        clc(del,0);
        sloved(n);
        clc(vis,0);
        LL ans = 0;
        rep(i,1,n)
        {
            cnt = sum = 0;
            if(vis[i] || del[i]) continue;
            dfs(i);
            if(cnt&1) ans += sum;
        }
        printf("%I64d\n", ans);
    }
    return 0;
}