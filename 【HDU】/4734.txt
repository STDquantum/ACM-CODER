#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 10;
int dp[MAXN][10000],lim,bit[MAXN],to[10];

int f(int n)
{
	int tmp = 1, ans = 0;
	while(n)
	{
		ans += tmp*(n%10);
		n /= 10;
		tmp <<= 1;
	}
	return ans;
}
int dfs(int len, int sum, int ismax)
{
	if(!len) return sum >= 0;
	int &ans = dp[len][sum];
	if(!ismax && ~ans) return ans;
	int cnt = 0, mx = ismax?bit[len]:9;
	repe(i,0,mx)
	{
		cnt += dfs(len-1,sum-i*to[len-1],ismax&&i==mx);
	}
	return ismax?cnt:ans=cnt;
}
int sloved(int n)
{
	int len = 0;
	while(n)
	{
		bit[++len] = n%10;
		n /= 10;
	}
	return dfs(len,lim,1);
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int t,count = 0;
	scanf("%d", &t);
	to[0] = 1;
	rep(i,1,10) to[i] = to[i-1]<<1;
	clc(dp,-1);
	while(t--)
	{
		int a,b;
		scanf("%d %d",&a, &b);
		lim = f(a);
		printf("Case #%d: %d\n", ++count,sloved(b));
	}
	return 0;
}
