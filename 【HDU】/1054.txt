#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;
#define MAXN 1510
vector<int> s[MAXN];
int f[MAXN], dp[MAXN][2];

void dfs(int root)
{
	int len = s[root].size();
	dp[root][1] = 1;
	for (int i = 0; i < len; i++)
		dfs(s[root][i]);
	for (int i = 0; i < len; i++)
	{
		dp[root][0] += dp[s[root][i]][1];
		dp[root][1] += min(dp[s[root][i]][1], dp[s[root][i]][0]);
	}
}
int main()
{
#ifdef SHY
	freopen("e:\\1.txt","r",stdin);
#endif
	int n;
	while (~scanf("%d%*c", &n))
	{
		int r, a, m;
		for (int i = 0; i <= n; i++)
			s[i].clear();
		memset(f,-1,sizeof(f));
		memset(dp,0,sizeof(dp));
		for (int i = 0; i < n; i++)
		{
			scanf("%d:(%d)%*c", &r, &m);
			for (int j = 0; j < m; j++)
			{
				scanf("%d%*c", &a);
				s[r].push_back(a);
				f[a] = r;
			}
		}
		for (r = 0; r < n; r++)
		{
			if (-1 == f[r])
				break;
		}
		dfs(r);
		printf("%d\n", min(dp[r][0], dp[r][1]));
	}
	return 0;
}