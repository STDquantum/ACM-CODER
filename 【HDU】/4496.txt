#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <map>
//#include <unordered_map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 10000+10, MAXM = 100000+10;
struct Edge{
	int u,v;
}edge[MAXM];
int f[MAXN], ans[MAXM];

int find(int x){return f[x] == x?x:f[x]=find(f[x]);}
int main()
{
#ifdef SHY
	freopen("e:\\1.txt", "r", stdin);
#endif
	int n,m;
	while(~scanf("%d %d%*c", &n, &m))
	{
		rep(i,0,m) scanf("%d %d%*c", &edge[i].u, &edge[i].v);
		rep(i,0,n) f[i] = i;
		int cnt = n;
		ans[m] = n;
		per(i,m-1,1)
		{
			int x = find(edge[i].u), y = find(edge[i].v);
			if(x != y)
			{
				cnt--;
				f[x] = y;
			}
			ans[i] = cnt;
		}
		repe(i,1,m) printf("%d\n", ans[i]);
	}
	return 0;
}
