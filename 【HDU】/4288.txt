#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <map>
//#include <unordered_map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
#define id(x,y) (x+y|x!=y)
const int INF = 0x3f3f3f3f, MAXN = 100000+10;
int in[MAXN], add[MAXN],tol, cnt[MAXN<<1];
LL sum[MAXN<<1][5];
map<int,int> num;

void push_up(int x, int y, int m)
{
	int u = id(x,y),l = id(x,m), r = id(m+1,y);
	cnt[u] = cnt[l]+cnt[r];
	rep(i,0,5) sum[u][i] = sum[l][i];
	rep(i,0,5) sum[u][(i+cnt[l])%5] += sum[r][i];
}
int p;
LL v;
void update(int x, int y)
{
	if(x == y)
	{
		sum[id(x,y)][1] += v;
		cnt[id(x,y)] = v > 0;
		return;
	}
	int m = (x+y)>>1;
	if(p <= m) update(x,m);
	else update(m+1,y);
	push_up(x,y,m);
}
int main()
{
#ifdef SHY
	freopen("e:\\1.txt", "r", stdin);
#endif
	int q;
	while(~scanf("%d%*c", &q))
	{
		char op[10];
		int m = 0;
		rep(i,0,q)
		{
			scanf("%s", op);
			if('s' == op[0])
			{
				in[i] = 0;
				continue;
			}
			scanf("%d%*c", &in[i]);
			if('d' == op[0]) in[i] = -in[i];
			else add[m++] = in[i];
		}
		sort(add,add+m);
		num.clear();
		tol = 0;
		rep(i,0,m)
		{
			if(num.find(add[i]) == num.end())
				num[add[i]] = tol++;
		}
		clc(sum,0);
		clc(cnt,0);
		rep(i,0,q)
		{
			if(!in[i]) printf("%I64d\n",sum[id(0,tol-1)][3]);
			else
			{
				p = num[abs(in[i])], v = in[i];
				update(0,tol-1);
			}
		}
	}
	return 0;
}
