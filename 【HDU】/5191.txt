#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <map>
//#include <unordered_map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 50000+10;
LL a[MAXN],sum1[MAXN],sum2[MAXN];

int main()
{
#ifdef SHY
    freopen("e:\\1.txt", "r", stdin);
#endif
    int n;
    LL w,h;
    while(~scanf("%d %I64d %I64d%*c", &n, &w, &h))
    {
        LL sum = 0;
        repe(i,1,n)
        {
            scanf("%I64d%*c", &a[i]);
            sum1[i] = sum1[i-1];
            sum2[i] = sum2[i-1];
            if(a[i] > h) sum1[i] += a[i]-h;
            else sum2[i] += h-a[i];
            sum += a[i];
        }
        LL ans = h*w;
        if(ans > sum)
        {
            puts("-1");
            continue;
        }
        rep(i,1,n+w)
        {
            LL s1 = 0,s2 = 0;
            if(i-w >= 0 && i <= n)
            {
                s1 = sum1[i]-sum1[i-w];
                s2 = sum2[i]-sum2[i-w];
            }
            if(i-w < 0)
            {
                s1 = sum1[i];
                s2 = sum2[i]+(w-i)*h;
            }
            if(i > n)
            {
                s1 += sum1[n]-(i-w >= 0?sum1[i-w]:0);
                s2 += sum2[n]-(i-w >= 0?sum2[i-w]:0)+(i-n)*h;
            }
            ans = min(ans, max(s1,s2));
        }
        printf("%I64d\n", ans);
    }
    return 0;
}
