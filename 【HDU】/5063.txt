#include <cstdio>
#include <cstring>
#include <string>
#include <map>
#include <queue>
#include <vector>
#include <algorithm>
using namespace std;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
#define min(a,b) (a>b?b:a)
#define max(a,b) (a>b?a:b)
#define MAXN 100010
#define MOD 1000000007
struct NODE{//输入数据
	char ch;
	int num;
}a[MAXN];
struct Q{//所有查询
	int si,x,cnt;
	Q(int a, int b, int c){si = a, x = b, cnt = c;}
};
vector<Q> q;

int main()
{
#ifdef SHY
    freopen("e:\\1.txt","r",stdin);
#endif
	int t;
	scanf("%d%*c", &t);
	while(t--)
	{
		int n,m, cnt = 0,num;
		scanf("%d %d%*c", &n, &m);
		char ch;
		q.clear();
		rep(i,0,m)
		{
			scanf("%c %d%*c", &ch, &num);
			if('O' == ch && 3 == num) cnt++;
			else if('Q' == ch) q.push_back(Q(i,num,cnt));
			a[i].ch = ch, a[i].num = num;
		}
		int sz = q.size(), mid = n-n/2;
		rep(i,0,sz)
		{
			int x = q[i].x;
			per(j,q[i].si-1,0)
			{
				if('Q' == a[j].ch) continue;
				if(1 == a[j].num)
				{
					if(x <= mid) x += x-1;
					else x -= n-x+(n&1);
				}
				else if(2 == a[j].num)
					x = n-x+1;
			}
			long long ans = x;
			rep(j,0,q[i].cnt)
				ans = ans*ans%MOD;
			printf("%I64d\n", ans);
		}
	}
	return 0;
}