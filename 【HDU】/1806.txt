#include <cstdio>
#include <cstring>
#include <cmath>
#include <map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
#define INF 0x3f3f3f3f
#define MAXN 100010
int a[MAXN], v[MAXN], cnt[MAXN], lt[MAXN], rt[MAXN], num[MAXN];
int dp[MAXN][20];

void st_init(int n)
{
	repe(i,1,n) dp[i][0] = cnt[i];
	for(int j = 1; (1<<j) <= n; j++)
	{
		for(int i = 1; i+(1<<j)-1 <= n; i++)
			dp[i][j] = max(dp[i][j-1], dp[i+(1<<(j-1))][j-1]);
	}
}
int st(int x, int y)
{
	int k = 0;
	while((1<<(k+1)) <= y-x+1) k++;
	return max(dp[x][k], dp[y-(1<<k)+1][k]);
}
inline int in()
{
	int f = 1, ans, ch;
	while((ch = getchar()) < '0' || ch > '9') if('-' == ch) {ch = getchar(),f = -1; break;}
	ans = ch-'0';
	while((ch = getchar()) >= '0' && ch <= '9') ans = ans*10+ch-'0';
	return f*ans;
}
int main()
{
#ifdef SHY
	freopen("e:\\1.txt", "r", stdin);
#endif
	int n;
	a[0] =  INF;
	while(~scanf("%d%*c", &n) && n)
	{
		int m = 0, left = 1, right  = 1, q;
		scanf("%d%*c", &q);
		repe(i,1,n)
		{
			a[i] = in();
			if(a[i] != a[i-1])
			{
				v[++m] = a[i];
				cnt[m-1] = right-left+1;
				lt[m-1] = left, rt[m-1] = right;
				left = right = i;
			}
			else right = i;
			num[i] = m;
		}
		cnt[m] = right-left+1;
		lt[m] = left, rt[m] = right;
		int x,y;
		st_init(m);
		rep(i,0,q)
		{
			x = in(), y = in();
			int ans;
			if(num[x] != num[y])
			{
				ans = max(rt[num[x]]-x+1, y-lt[num[y]]+1);
				if(num[x]+1 <= num[y]-1)ans = max(st(num[x]+1, num[y]-1),ans);
			}
			else ans = y-x+1;
			printf("%d\n", ans);
		}
	}
	return 0;
}
