#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
#include <bitset>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 10000+10, MAXM = 500000+10, MAXQ = 100000+10, MAXOUT = MAXQ;
char buf[MAXQ], *ps = buf, *pe = buf+1;
inline void rnext(){
	if(++ps == pe)
		pe = (ps = buf)+fread(buf,sizeof(char),sizeof(buf)/sizeof(char),stdin);
}
template <class T>
inline bool in(T &ans)
{
	ans = 0;
	T f = 1;
	if(ps == pe) return false;//EOF
	do{
		rnext();
		if('-' == *ps) f = -1;
	}while(!isdigit(*ps) && ps != pe);
	if(ps == pe) return false;//EOF
	do
	{
		ans = (ans<<1)+(ans<<3)+*ps-48;
		rnext();
	}while(isdigit(*ps) && ps != pe);
	ans *= f;
	return true;
}
char bufout[MAXOUT], outtmp[50],*pout = bufout, *pend = bufout+MAXOUT;
inline void write()/*必须在程序结束时加 write()*/
{
	fwrite(bufout,sizeof(char),pout-bufout,stdout);
	pout = bufout;
}
inline void out_char(char c){ *(pout++) = c;if(pout == pend) write();}
inline void out_str(char *s)
{
	while(*s)
	{
		*(pout++) = *(s++);
		if(pout == pend) write();
	}
}
template <class T>
inline void out_int(T x) {
	if(!x)
	{
		out_char('0');
		return;
	}
	if(x < 0) x = -x,out_char('-');
	int len = 0;
	while(x)
	{
		outtmp[len++] = x%10+48;
		x /= 10;
	}
	outtmp[len] = 0;
	for(int i = 0, j = len-1; i < j; i++,j--) swap(outtmp[i],outtmp[j]);
	out_str(outtmp);
}
struct Edge{
	int u,v,w;
	bool operator<(const Edge&t)const{
		return w < t.w;
	}
}edge[MAXM];
struct Q{
	int id,v;
	bool operator<(const Q&t)const{
		return v > t.v;
	}
}qin[MAXQ];
int f[MAXN],sum[MAXN], tol,add[MAXN],w[MAXN], ans[MAXQ];

int find(int x){return f[x] == x?x:f[x] = find(f[x]);}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int n,m;
	while(in(n))
	{
		in(m);
		rep(i,0,m) in(edge[i].u), in(edge[i].v), in(edge[i].w);
		sort(edge,edge+m);
		rep(i,0,n)  f[i] = i, sum[i] = 1;
		tol = 0;
		rep(i,0,m)
		{
			int x = find(edge[i].u), y = find(edge[i].v);
			if(x != y)
			{
				w[tol] = edge[i].w;
				add[tol] = sum[x]*sum[y];
				f[y] = x;
				sum[x] += sum[y];
				if(++tol == n-1) break;
			}
		}
		int q;
		in(q);
		rep(i,0,q) in(qin[i].v), qin[i].id = i;
		sort(qin,qin+q);
		int p = 0, tmp = 0;
		tol--;
		while(p < q)
		{
			while(tol >= 0 && qin[p].v <= w[tol])
			{
				tmp += add[tol--];
			}
			ans[qin[p++].id] = tmp;
		}
		rep(i,0,q) out_int(ans[i]<<1),out_char('\n');
	}
	write();
	return 0;
}
