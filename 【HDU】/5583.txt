#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int  MAXN = 1e5+10;
const LL INF = 0x3f3f3f3f3f3f3f3f;
char a[MAXN];
LL l[MAXN][2],r[MAXN][2],sum[MAXN];

int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int t,count = 0;
	scanf("%d", &t);
	while(t--)
	{
		scanf("%s", a+1);
		int n = strlen(a+1);
		l[1][0] = l[1][1] = 1;
		repe(i,2,n)
		{
			rep(j,0,2)
			{
				if(j == a[i-1]-'0')
					l[i][j] = l[i-1][j];
				else l[i][j] = i;
			}
		}
		r[n][0] = r[n][1] = n;
		per(i,n-1,1)
		{
			rep(j,0,2)
			{
				if(j == a[i+1]-'0')
					r[i][j] = r[i+1][j];
				else r[i][j] = i;
			}
		}
		LL ans = 0;
		int p = 1;
		while(p <= n)
		{
			int v = a[p]-'0';
			ans += (r[p][v]-l[p][v]+1)*(r[p][v]-l[p][v]+1);
			repe(i,p,r[p][v]) sum[i] = (r[p][v]-l[p][v]+1);
			p = r[p][v]+1;
		}
		a[0] = a[1], a[n+1] = a[n];
		//sum[0] = sum[]
		LL mx = 0;
		repe(i,1,n)
		{
			int v = a[i]-'0';
			LL tmp = (r[i][v^1]-l[i][v^1]+1)*(r[i][v^1]-l[i][v^1]+1);
			if(a[i] != a[i-1] && a[i] != a[i+1])
				mx = max(mx, tmp-1-sum[i-1]*sum[i-1]-sum[i+1]*sum[i+1]);
			else
			{
				if(a[i] == a[i-1] && a[i] == a[i+1])continue;
				if(a[i] != a[i-1])
					mx = max(mx, tmp-sum[i]*sum[i]-sum[i-1]*sum[i-1]+(sum[i]-1)*(sum[i]-1));
				else if(a[i] != a[i+1])
					mx = max(mx, tmp-sum[i]*sum[i]-sum[i+1]*sum[i+1]+(sum[i]-1)*(sum[i]-1));
			}
		}
		printf("Case #%d: %lld\n", ++count,ans+mx);
	}
	return 0;
}
