#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
#include <bitset>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef unsigned long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 50000+10, MAXIN = 10000;
char buf[MAXIN], *ps = buf, *pe = buf+1;
inline void rnext(){
	if(++ps == pe) pe = (ps = buf)+fread(buf,sizeof(char),sizeof(buf)/sizeof(char),stdin);
}
template <class T>
inline bool in(T &ans)
{
	ans = 0;
	T f = 1;
	if(ps == pe) return false;
	do{ rnext(); if('-' == *ps) f = -1;} while(!isdigit(*ps) && ps != pe);
	if(ps == pe) return false;
	do{ ans = (ans<<1)+(ans<<3)+*ps-48;rnext();}while(isdigit(*ps) && ps != pe);
	ans *= f;
	return true;
}
LL cnt[MAXN],w[MAXN];

LL gcd(LL a,LL b)
{
	while(b)
	{
		a %= b;
		if(a < b) swap(a,b);
	}
	return a;
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int t;
	in(t);
	while(t--)
	{
		int n;
		LL m;
		in(n);in(m);
		repe(i,1,n) in(w[i]);
		clc(cnt,0);
		int mx = 0;
		repe(i,1,m)
		{
			int x,y;
			in(x);in(y);
			cnt[x]++;
			cnt[y+1]--;
			mx = max(mx,y+1);
		}
		repe(i,1,mx) cnt[i] += cnt[i-1];
		LL sum = 0,d = m*(m-1)*(m-2)/6;
		repe(i,1,n)
		{
			sum += cnt[i]*(cnt[i]-1)*(cnt[i]-2)/6*w[i];
		}

		if(sum == 0) puts("0");
		else
		{
			LL g = gcd(sum,d);
			sum /= g, d /= g;
			if(d == 1) printf("%llu\n", sum);
			else printf("%llu/%llu\n",sum,d);
		}
	}
	return 0;
}
