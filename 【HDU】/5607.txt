#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 50+10, MOD = 1e9+7;
int out[MAXN],n;

struct MATRIX{
	int num[MAXN][MAXN];
	MATRIX()
	{
		clc(num,0);
	}
	MATRIX operator*(const MATRIX &b)
	{
		MATRIX ans;
		rep(k,0,n)
		{
			rep(i,0,n)
			{
				rep(j,0,n)
				{
					ans.num[i][j] = (ans.num[i][j]+num[i][k]*(LL)b.num[k][j])%MOD;
				}
			}
		}
		return ans;
	}
};
MATRIX pow_mod(MATRIX x, int k)
{
	MATRIX ans;
	rep(i,0,n) ans.num[i][i] = 1;
	while(k)
	{
		if(k&1) ans = x*ans;
		x = x*x;
		k >>= 1;
	}
	return ans;
}
LL pow_mod(LL x, int k)
{
	LL ans = 1;
	while(k)
	{
		if(k&1) ans = ans*x%MOD;
		x = x*x%MOD;
		k >>= 1;
	}
	return ans;
}

int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int m;
	scanf("%d%d", &n,&m);
	MATRIX x;
	clc(out,0);
	while(m--)
	{
		int a,b;
		scanf("%d%d", &a,&b);
		x.num[a-1][b-1]++;
		out[a-1]++;
	}
	rep(i,0,n) rep(j,0,n) x.num[i][j] = x.num[i][j]*pow_mod(out[i],1e9+5)%MOD;
	int q;
	scanf("%d", &q);
	while(q--)
	{
		int u,k;
		scanf("%d%d", &u,&k);
		MATRIX ans = pow_mod(x,k);
		rep(i,0,n) printf("%d ", ans.num[u-1][i]);
		putchar('\n');
	}
	return 0;
}
