#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 20;
int bit[MAXN];
LL dp[MAXN][MAXN][1800];

LL dfs(int len, int mid, int w, int ismax)
{
	if(!len) return 0 == w;
	LL &ans = dp[len][mid][w];
	if(!ismax && ~ans) return ans;
	LL sum = 0;
	int mx = ismax?bit[len]:9;
	repe(i,0,mx)
	{
		if(len == mid && 0 == i && 0 == w) continue;
		sum += dfs(len-1,mid,w+i*(len-mid),ismax && i == mx);
	}
	return ismax?sum:ans = sum;
}
LL sloved(LL n)
{
	if(n < 0) return 0;
	int len = 0;
	while(n)
	{
		bit[++len] = n%10;
		n /= 10;
	}
	LL ans = 0;
	per(i,len,1) ans += dfs(len,i,0,1);
	return ans+1;
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int t;
	scanf("%d", &t);
	clc(dp,-1);
	while(t--)
	{
		LL x,y;
		scanf("%I64d %I64d", &x, &y);
		printf("%I64d\n", sloved(y)-sloved(x-1));
	}
	return 0;
}
