#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <map>
//#include <unordered_map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 100000+10, MOD = 256;
struct DA{
	int s[MAXN], sa[MAXN], t[MAXN], t2[MAXN], c[MAXN], n;
	void add(int ch)
	{
		s[n++] = ch;
	}
	void bulid_sa(int m)
	{
		int *x = t, *y = t2, p;
		memcpy(x,s,sizeof(int)*n);
		memset(c,0,sizeof(int)*m);
		rep(i,0,n) c[x[i]]++;
		rep(i,1,m) c[i] += c[i-1];
		per(i,n-1,0) sa[--c[x[i]]] = i;
		for(int k = 1; k <= n; k <<= 1, m = p)
		{
			p = 0;
			rep(i,n-k,n) y[p++] = i;
			rep(i,0,n) if(sa[i] >= k) y[p++] = sa[i]-k;
			memset(c,0,sizeof(int)*m);
			rep(i,0,n) c[x[y[i]]]++;
			rep(i,1,m) c[i] += c[i-1];
			per(i,n-1,0) sa[--c[x[y[i]]]] = y[i];
			swap(x,y);
			p = 1;x[sa[0]] = 0;
			rep(i,1,n) x[sa[i]] = y[sa[i-1]]==y[sa[i]]&&y[sa[i-1]+k]==y[sa[i]+k]?p-1:p++;
			if(p >= n) break;
		}
	}
	int rank[MAXN], height[MAXN];
	void get_height()
	{
		int k = 0;
		rep(i,0,n) rank[sa[i]] = i;
		rep(i,0,n)
		{
			if(k)k--;
			int j = sa[rank[i]-1];
			while(s[i+k] == s[j+k])k++;
			height[rank[i]] = k;
		}
	}
	int dp[MAXN][20];
	void rmq_init()//初始化rmq  O(nlog(n))
	{
		repe(i,1,n) dp[i][0] = height[i];
		for(int j = 1; (1<<j)<=n; j++)
		{
			for(int i = 1; i+(1<<j)-1 <= n; i++)
				dp[i][j] = min(dp[i][j-1],dp[i+(1<<(j-1))][j-1]);
		}
	}
	int ask_rmq(int x, int y)
	{
		int k = 0;
		while((1<<(k+1)) <= y-x+1) k++;
		return min(dp[x][k], dp[y-(1<<k)+1][k]);
	}
	int lcp(int x, int y)//求出后缀x和y的最长公共前缀 O(1)
	{
		x = rank[x], y = rank[y];
		return x<y?ask_rmq(x+1,y):ask_rmq(y+1,x);
	}
}da;
char a[MAXN];

int main()
{
#ifdef SHY
	freopen("e:\\1.txt", "r", stdin);
#endif
	while(~scanf("%s", a))
	{
		int len = strlen(a);
		da.n = 0;
		rep(i,0,len)
		{
			da.add(a[i]-'a'+1);
		}
		da.add(0);
		da.bulid_sa(28);
		da.get_height();
		int ans = len;
		da.rmq_init();
		rep(i,1,da.n) ans = (ans+da.lcp(0,i))%MOD;
		printf("%d\n", ans);
	}
	return 0;
}
