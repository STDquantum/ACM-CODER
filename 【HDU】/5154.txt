#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <map>
//#include <unordered_map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 100+10, MAXM = 10000+10;
int head[MAXN], tol,to[MAXM], nxt[MAXM];
int in[MAXN];

inline void add_edge(int u, int v)
{
	nxt[tol] = head[u], to[tol] = v;
	head[u] = tol++;
}
int n;
int topo()
{
	int p = 0;
	queue<int> q;
	repe(i,1,n) if(!in[i]) q.push(i);
	while(!q.empty())
	{
		int u = q.front();q.pop();
		for(int i = head[u]; ~i; i = nxt[i])
		{
			int v = to[i];
			if(!--in[v]) q.push(v);
		}
		p++;
	}
	if(p+q.size() < n) return false;
	return true;
}

int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int m;
	while(~scanf("%d %d%*c", &n, &m))
	{
		clc(head,-1);
		tol = 0;
		clc(in,0);
		rep(i,0,m)
		{
			int u,v;
			scanf("%d %d%*c", &u, &v);
			add_edge(u,v);
			in[v]++;
		}
		if(topo()) puts("YES");
		else puts("NO");
	}
	return 0;
}
