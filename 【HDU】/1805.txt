#include <stdio.h>
#include <malloc.h>
#include <stack>
#include <queue>
using namespace std;
typedef struct Node{
	char data;
	Node *rchild, *lchild;
}node, *pnode;
char m[10005];
int len = 0;

pnode creat_tree();
void traverse (pnode);

int main ()
{
	int t;
	scanf ("%d%*c", &t);
	while(t--)
	{
		len = 0;
		pnode ph = creat_tree();
		traverse(ph);
		for (int i = len-1; i >= 0; i--)
			printf ("%c", m[i]);
		printf ("\n");
	}
	return 0;
}

pnode creat_tree()
{
	char c;
	stack <pnode>s;
	while('\n' != (c = getchar()) && EOF != c)
	{
		pnode p = (pnode)malloc(sizeof(node)), buf;
		p->data = c;
		if ('a' <= c && 'z' >= c)
		{
			p->lchild = p->rchild = NULL;
			s.push(p);
		}
		else
		{
			buf = s.top(), s.pop();
			p->rchild = buf;
			buf = s.top(), s.pop();
			p->lchild = buf;
			s.push(p);
		}
	}
	return s.top();
}

void traverse (pnode p)
{
	queue <pnode> que;
	que.push(p);
	while(que.size())
	{
		p = que.front(),que.pop();
		m[len++] = p->data;
		if (p->lchild)
			que.push(p->lchild);
		if (p->rchild)
			que.push(p->rchild);
		free(p);		
	}
}