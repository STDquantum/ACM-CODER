#include <cstdio>
#include <cstring>
#include <cmath>
#include <map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
#define INF 0x3f3f3f3f
typedef long long LL;
#define MAXN 310
int dis[MAXN][MAXN], sum[MAXN][MAXN],n;

void floyd()
{
	repe(k,1,n)
	{
		repe(i,1,n)
		{
			repe(j,1,n)
			{
				if(dis[i][j] > dis[i][k]+dis[k][j])
				{
					dis[i][j] = dis[i][k]+dis[k][j];
					sum[i][j] = sum[i][k]+sum[k][j];
				}
				else if(dis[i][j] == dis[i][k]+dis[k][j] && sum[i][j] < sum[i][k]+sum[k][j])
					sum[i][j] = sum[i][k]+sum[k][j];
			}
		}
	}
}
int main()
{
#ifdef SHY
	freopen("e:\\1.txt", "r", stdin);
#endif
	int m;
	while(~scanf("%d %d%*c", &n, &m) &&n+m)
	{
		int a,b,c,d;
		clc(dis,0x3f);
		clc(sum,0);
		repe(i,1,n) dis[i][i] = 0;
		rep(i,0,m)
		{
			scanf("%d %d %d%*c", &a, &b, &c);
			if(c > dis[a][b]) continue;
			dis[a][b] = dis[b][a] = c;
			sum[a][b] = sum[b][a] = 1;
		}
		floyd();
		int ans = -1;
		scanf("%d %d %d %d%*c", &a,&b,&c,&d);
		repe(i,1,n)
		{
			repe(j,1,n)
			{
				if(ans < sum[i][j] && sum[a][b] == sum[a][i]+sum[i][j]+sum[j][b] && sum[c][d] == sum[c][i]+sum[i][j]+sum[j][d])
					ans = sum[i][j];
			}
		}
		printf("%d\n", ans+1);
	}
	return 0;
}