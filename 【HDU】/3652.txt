#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 11;
int dp[MAXN][13][2][2], bit[MAXN];

int dfs(int len, int mod, bool is1, bool ok, bool ismax)
{
	if(!len) return ((bool)mod) || ok;
	if(!ismax && ~dp[len][mod][is1][ok]) return dp[len][mod][is1][ok];
	int mx = ismax?bit[len]:9, sum = 0;
	repe(i,0,mx)
	{
		if(is1 && 3 == i) sum += dfs(len-1,(mod*10+i)%13,1 == i,0,ismax&&i==mx);
		else sum += dfs(len-1,(mod*10+i)%13,1 == i,ok,ismax&&i==mx);
	}
	return ismax?sum:dp[len][mod][is1][ok] = sum;
}
int sloved(int n)
{
	int len = 0;
	while(n)
	{
		bit[++len] = n%10;
		n /= 10;
	}
	return dfs(len,0,0,1,1);
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int n;
	clc(dp,-1);
	while(~scanf("%d", &n))
	{
		printf("%d\n", n-sloved(n)+1);
	}
	return 0;
}
