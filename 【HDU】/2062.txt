#include <stdio.h>

void del (__int64 *p, __int64 n, __int64 fs)//删除已经输出的数字
{
	int i;
	if (fs == n)
	{
		p[fs] = '\0';
		return;
	}

	for (i = fs; i < n;i++)
	{
		p[i] = p[i+1];
	}
	p[n] = '\0';
}

int main ()
{
	__int64 n, m;

	while (EOF != scanf ("%I64d %I64d", &n, &m))
	{
		getchar ();
		__int64 pn[21], a[21], i, fs = 0, fn, end = 0;
		pn[1] = a[1] = 1;
		for (i = 2; i <= n; i++)
		{
			pn[i] = 1 + pn[i-1]*(i-1);//每个单个数开始的总数
			a[i] = i;
		}
		
		for (i = n, fn = m;i >= 2; i--)//循环查找每一个位置在每一个小模块中的位置 输出对应数字
		{
			fs = 0;
			if (0 != fn%pn[i])
				fs ++;
			fs += fn/pn[i];
			printf ("%I64d", a[fs]); 
			del(a, i, fs);//删除已经输出的数字
			if (1 == fn%pn[i])
			{
				printf ("\n");
				end = 1;
				break;
			}
			else
				if (0 == fn%pn[i])
					fn = pn[i]-1;
				else
					fn = fn%pn[i]-1;
			printf (" ");
		}

		if (0 == end)
			printf ("%I64d\n", a[1]);

	}
	return 0;
}
