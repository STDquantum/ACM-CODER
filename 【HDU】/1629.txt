#include <stdio.h>
#include <algorithm>
using namespace std;
const int MAXLEN = 1<<5;
char num[10], hua[10], put[10];

void beto(char *a)
{
	if ('0' <= *a && '9' >= *a)
		*a -= '0';
	else if ('A' <= *a && 'Z' >= *a)
	{
		switch (*a)
		{
		case 'A': *a = 1;break;
		case 'T': *a = 10;break;
		case 'J': *a = 11;break;
		case 'Q': *a = 12;break;
		case 'K': *a = 13;break;
		}
	}
}
int thesize(int);
int main ()
{
	#ifdef DSHY
		freopen("e:\\1.txt","r",stdin);
	#endif
	while(EOF != scanf ("%c%c%*c", &num[0], &hua[0]))
	{
		int i, ans = -1, size, buf;
		put[0] = num[0];
		beto(&num[0]);
		for (i = 1;  i < 10; i++)
		{
			scanf ("%c%c%*c", &num[i], &hua[i]);
			put[i] = num[i];
			beto(&num[i]);
		}
		for (i = 0; i < MAXLEN; i++)
		{
			size = thesize(i);
			if (size > ans)
				ans = size;
			if (71 == ans)
				break;
		}
		printf ("Hand: ");
		for (i = 0; i < 5; i++)
			printf ("%c%c ", put[i],hua[i]);
		printf ("Deck: ");
		for (;i < 10; i++)
			printf ("%c%c ", put[i],hua[i]);
		printf ("Best hand: ");
		switch(ans)
		{
		case 0: printf ("highest-card\n");break;
		case 20:printf ("one-pair\n");break;
		case 25:printf ("two-pairs\n");break;
		case 30:printf ("three-of-a-kind\n");break;
		case 35:printf ("straight\n");break;
		case 36:printf ("flush\n");break;
		case 39:printf ("full-house\n");break;
		case 40:printf ("four-of-a-kind\n");break;
		case 71:printf ("straight-flush\n");break;
		}
	}

	return 0;
}

int thesize(int s)
{
	int i, sd = 5, size = 0, same = 0, duizi = 0, twosame = 0;
	char m[6], h[6];
	bool tonghua = true, shunzi = true, haveace = false;
	for (i = 0; i < 5; i++)
	{
		if (s&(1<<i))
			m[4-i] = num[4-i], h[4-i] = hua[4-i];
		else
			m[4-i] = num[sd], h[4-i] = hua[sd++];
		if (1 == m[i])
			haveace = true;
	}
	for (i = 1; i < 5; i++)
	{
		if (h[i-1] != h[i])
		{
			tonghua = false;
			break;
		}
	}
	if (tonghua)
		size = 36;
	sort(m, m+5);
	for (i = 1; i < 5; i++)
	{
		if (m[i-1] != m[i])
		{
			if (1 == same)
				twosame++;
			same = 0;
		}
		else
		{
			same++;
			if (same > duizi)
				duizi = same;
		}
		if (1 != m[i]-m[i-1])
			shunzi = false;
	}
	if (1 == same)
		twosame++;
	if (haveace && !shunzi)
	{
		m[0] = 14;
		sort(m, m+5);
		shunzi = true;
		for (i = 1; i < 5; i++)
		{
			if (1 != m[i]-m[i-1])
			{
				shunzi = false;
				break;
			}
		}
	}

	if (shunzi)
		size += 35;
	else
	{
		if (duizi)
			size = (duizi+1)*10;
		if (1 == duizi && 2 == twosame)
			size = 25;
		if (2 == duizi && twosame)
			size = 39;
	}
	return size;
}