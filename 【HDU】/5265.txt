#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 100000+10;
LL a[MAXN], MOD;
set<LL> s;

int main()
{
#ifdef SHY
    freopen("d:\\1.txt", "r", stdin);
#endif
    int n;
    while(~scanf("%d %I64d%*c", &n, &MOD))
    {
        rep(i,0,n) scanf("%I64d%*c", &a[i]), a[i] %= MOD;
        sort(a,a+n);
        LL ans = 0;
        rep(i,1,n)
        {
            if(a[i] == a[i-1]) ans = max(ans, (a[i]<<1)%MOD);
        }
        s.clear();
        s.insert(a[0]);
        rep(i,1,n)
        {
            LL mx = MOD-a[i]-1;
            set<LL>::iterator it = s.upper_bound(mx);
            if(s.size() == 1) ans = max(ans, (*s.begin()+a[i])%MOD);
            if(it != s.begin())
            {
                it--;
                ans = max(ans, (*it+a[i])%MOD);
                if(it != s.begin()) 
                    ans = max(ans, (*it+a[i])%MOD);
            }
            s.insert(a[i]);
        }
        printf("%I64d\n", ans);
    }
    return 0;
}