#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <map>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
#include <ctime>
using namespace std;
typedef unsigned int LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN =  200+10;
int a[MAXN];
int dp[2][MAXN];

int main()
{
#ifdef SHY
    freopen("in", "r", stdin);
#endif
	int t;
	scanf("%d%*c", &t);
    while(t--)
    {
    	int n,m;
    	scanf("%d %d%*c", &n, &m);
    	rep(i,0,m) scanf("%d%*c", &a[i]), a[i]--;
    	clc(dp,0);
    	int now = 1;
    	dp[1][0] = true;
    	repe(i,2,n)
    	{
    		now ^= 1;
    		clc(dp[now],0);
    		rep(j,0,i)
    		{
    			rep(k,0,m)
    			{
    				int tmp = a[k]%i;
    				if(tmp == j) continue;
    				int p;
					int &ans = dp[now][j];
    				if(tmp < j) p = j-tmp-1;
    				else p = (i-tmp-1)+j;
    				ans = dp[now^1][p];
    				if(ans) break;
    			}
    		}
    	}
    	int sum = 0;
    	rep(i,0,n) if(dp[now][i]) sum++;
    	bool f = false;
    	printf("%d\n", sum);
    	rep(i,0,n)
    	{
    		if(!dp[now][i]) continue;
    		if(f) putchar(' ');
    		else f = true;
    		printf("%d",i+1);
    	}
    	putchar('\n');
    }
    return 0;
}


