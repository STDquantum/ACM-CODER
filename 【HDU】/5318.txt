#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
#include <bitset>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 50+10;
const LL MOD = 1000000007;
int a[MAXN],n;
struct MATRIX{//æÿ’Û
	LL num[MAXN][MAXN];
};
set<int> vis;

MATRIX mul(const MATRIX& a, const MATRIX& b)//æÿ’Ûa*b
{
	MATRIX ans;
	clc(ans.num,0);
	rep(i,0,n)
	{
		rep(j,0,n)
		{
			rep(k,0,n)
				ans.num[i][j] = (ans.num[i][j]+(a.num[i][k]*b.num[k][j]%MOD+MOD)%MOD)%MOD;
		}
	}
	return ans;
}
MATRIX pow_mod(MATRIX x, int cnt)//øÏÀŸ√›
{
	MATRIX ans;
	clc(ans.num,0);
	rep(i,0,n) ans.num[i][i] = 1;
	while(cnt)
	{
		if(cnt&1) ans = mul(ans,x);
		x = mul(x,x);
		cnt >>= 1;
	}
	return ans;
}
bool ok(int x, int y)
{
	char aa[MAXN],bb[MAXN];
	sprintf(aa,"%d",x);sprintf(bb,"%d",y);
	int len1 = strlen(aa), len2 = strlen(bb);
	per(i,len1-2,0)
	{
		char *p;
		if((p = strstr(bb,aa+i)) && p == bb) return true;
	}
	return false;
}

int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int t;
	scanf("%d", &t);
	while(t--)
	{
		int m,cnt = 0;
		scanf("%d %d", &n, &m);
		vis.clear();
		rep(i,0,n)
		{
			int tmp;
			scanf("%d", &tmp);
			if(vis.find(tmp) == vis.end())
			{
				a[cnt++] = tmp;
				vis.insert(tmp);
			}
		}
		n = cnt;
		if(0 == m)
		{
			puts("0");
			continue;
		}
		MATRIX x;
		rep(i,0,n)
		{
			rep(j,0,n)
			{
				x.num[i][j] = ok(a[i],a[j]);
			}
		}
		MATRIX ans = pow_mod(x,m-1);
		LL sum = 0;
		rep(i,0,n) rep(j,0,n) sum = (sum+ans.num[i][j])%MOD;
		printf("%I64d\n", sum);
	}
	return 0;
}
