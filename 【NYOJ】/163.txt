#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <map>
//#include <unordered_map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 100000+10;
struct Trie{
	struct NODE{
		int ch[10];
		bool val;
	}node[MAXN*10];
	int cnt;
	int newnode()
	{
		clc(node[cnt].ch,-1);
		node[cnt++].val = 0;
		return cnt-1;
	}
	void init(){
		cnt = 0;
		newnode();
	}
	bool insert(char *s)
	{
		int len = strlen(s), u = 0;
		rep(i,0,len)
		{
			int &c = node[u].ch[s[i]-'0'];
			if(-1 == c)
				c = newnode();
			u = c;
			if(node[u].val) return false;
		}
		node[u].val = 1;
		return true;
	}
}trie;
char s[MAXN][15];
int num[MAXN];

inline bool cmp(int a, int b){
	return strlen(s[a]) < strlen(s[b]);
}
bool ok(int n)
{
	trie.init();
	rep(i,0,n)
	{
		if(!trie.insert(s[num[i]])) return false;
	}
	return true;
}
int main()
{
#ifdef SHY
	freopen("e:\\1.txt", "r", stdin);
#endif
	int t;
	scanf("%d%*c", &t);
	while(t--)
	{
		int n;
		scanf("%d%*c", &n);
		rep(i,0,n)
			scanf("%s", s[i]), num[i] = i;
		sort(num,num+n, cmp);
		if(ok(n)) puts("YES");
		else puts("NO");
	}
	return 0;
}
