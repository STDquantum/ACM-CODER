#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define MAXN 110
const int f[4][2] = {{-1,0},{1,0},{0,-1},{0,1}};
int dp[MAXN][MAXN], a[MAXN][MAXN], h, w;

int dfs(int si, int sj)
{
	if (-1 != dp[si][sj]) return dp[si][sj];
	dp[si][sj] = 1;
	for (int i = 0; i < 4; i++)
	{
		int ni = si+f[i][0], nj = sj+f[i][1];
		if (ni >= 0 && ni < h && nj >= 0 && nj < w && a[si][sj] > a[ni][nj])
			dp[si][sj] = max(dp[si][sj], dfs(ni,nj)+1);
	}
	return dp[si][sj];
}
int main()
{
#ifdef SHY
	freopen("e:\\1.txt","r",stdin);
#endif
	int t;
	scanf("%d%*c", &t);
	while(t--)
	{
		scanf("%d %d%*c", &h, &w);
		for (int i = 0; i < h; i++)
		{
			for (int j = 0; j < w; j++)
				scanf("%d%*c", &a[i][j]);
		}
		memset(dp,-1,sizeof(dp));
		int ans = 0;
		for (int i = 0; i < h; i++)
		{
			for (int j = 0; j < w; j++)
				ans = max(ans,dfs(i,j));
		}
		printf("%d\n", ans);
	}
	return 0;
}