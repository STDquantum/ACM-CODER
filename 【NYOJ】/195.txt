#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;
#define MAXN 1010
struct NODE{
	int x, y;
}p[MAXN];
char ch;
int dp[MAXN];

inline int input()
{
	while((ch = getchar()) < '0' || ch > '9');
	int ans = ch-'0';
	while((ch = getchar()) >= '0' && '9' >= ch) ans = ans*10+ch-'0';
	return ans;
}
void q_sort(int l, int r)
{
	if (l < r)
	{
		int i = l, j = r, x = p[l].x, y = p[l].y;
		while(i < j)
		{
			while(i < j && p[j].x >= x) j--;
			if (i < j) p[i].x = p[j].x,p[i++].y = p[j].y;
			while(i < j && p[i].x <= x) i++;
			if (i < j) p[j].x = p[i].x,p[j--].y = p[i].y;
		}
		p[i].x = x, p[i].y = y;
		q_sort(l,i-1);
		q_sort(i+1,r);
	}
}
int main()
{
#ifdef SHY
	freopen("e:\\1.txt","r",stdin);
#endif
	int h,w;
	while(~scanf("%d %d%*c", &h, &w))
	{
		int k = input(), ans = 0;
		for (int i = 0; i < k; i++)
			p[i].x = input(), p[i].y = input();
		q_sort(0,k-1);
		for (int i = 0; i < k; i++)
		{
			dp[i] = 1;
			for (int j = 0; j < i; j++)
			{
				if (p[i].x > p[j].x && p[i].y > p[j].y)
					dp[i] = max(dp[i],dp[j]+1);
			}
			ans = max(ans,dp[i]);
		}
		printf("%.0lf\n", (h+w-(2-sqrt(2))*ans)*100);
	}
	return 0;
}