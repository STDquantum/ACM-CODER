#include <stdio.h>
#include <malloc.h>
#define MAX 99999999

int a[1001][1001], w[1001][1001];

int dijkstra (int, int, int);

int main ()
{
	int t;
	scanf ("%d%*c", &t);
	while (t--)
	{
		int n, m, p, q, *amr, i, j, num, min = MAX, buf;
		scanf ("%d %d %d %d%*c", &n, &m, &p, &q);
		amr = (int *) malloc (sizeof(int)*(n+1));
		for (i = 1; i <= n; i++)
			scanf ("%d%*c", &amr[i]);
		for (i = 1; i <= m; i++)
			for (j = 1; j <= m; j++)
				w[i][j] = w[j][i] = MAX;
		while (p--)
		{
			scanf ("%d %d %d%*c", &i, &j, &num);
			a[i][j] = a[j][i] = 1;
			if (w[i][j] > num)
				w[i][j] = w[j][i] = num;
		}
		for (i = 1; i <= n; i++)
		{
			buf = dijkstra (amr[i], m, q);
			if(min > buf)
				min = buf;
		}
		printf ("%d\n", min);
		free(amr);
	}


	return 0;
}

int dijkstra (int amr, int m, int q)
{
	int t[1001],len[1001], i, si, min;
	for (i = 1; i <= m; i++)//³õÊ¼»¯¶¥µã
	{
		if (1 == a[amr][i])
			len[i] = w[amr][i];
		else
			len[i] = MAX;
		t[i] = 1;
	}
	t[amr] = 0;
	while (0 != t[q])
	{
		for (i = 1, min  = MAX; i <= m; i++)
			if (1 == t[i] && min > len[i])
			{
				min = len[i];
				si = i;
			}
		t[si] = 0;
		for (i = 1; i <= m; i++)
		{
			if (1 == t[i] && (1 == a[si][i] || 1 == a[i][si])&& len[si]+w[si][i] < len[i])
				len[i] = len[si]+w[si][i];
		}
	}
	return len[q];
}