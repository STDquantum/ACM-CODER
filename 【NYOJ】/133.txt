#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <map>
//#include <unordered_map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 1000000+10, MOD = 1000007;
struct HASH{
	int head[MAXN], next[MOD], node[MAXN], cnt;
	void clear()
	{
		cnt = 0;
		clc(head,-1);
	}
	int size(){
		return cnt;
	}
	int hash(int u){
		if(u < 0) u += 1<<31;
		return u%MOD;
	}
	int query(int s)
	{
		int id = hash(s);
		int u = head[id];
		while(~u)
		{
			if(node[u] == s)
				return u;
			u = next[u];
		}
		node[cnt] = s;
		next[cnt] = head[id];
		head[id] = cnt++;
		return cnt-1;
	}
}vis;
int sum[MAXN];

void in(int &ans)
{
	int ch, f = 1;
	while((ch = getchar()) < '0' || '9' < ch)
	{
		if('-' == ch)
		{
			f = -1, ch = getchar();
			break;
		}
	}
	ans = ch-'0';
	while((ch = getchar()) >= '0' && '9' >= ch) ans = (ans<<3)+(ans<<1)+ch-'0';
	ans *= f;
}
int main()
{
#ifdef SHY
	freopen("e:\\1.txt", "r", stdin);
	//freopen("e:\\out.txt", "w", stdout);
#endif
	int t;
	scanf("%d%*c", &t);
	while(t--)
	{
		int n, a;
		scanf("%d%*c", &n);
		vis.clear();
		clc(sum,0);
		queue<int> q;
		int sq = 0, sm = 0, id;
		rep(i,0,n)
		{
			in(a);
			sum[id = vis.query(a)]++;
			q.push(id);
			int u = q.front();
			while(sum[u] > 1)
			{
				--sum[u];
				q.pop();
				u = q.front();
			}
			if(sq > q.size() || sm != vis.size())
			{
				sq = q.size();
				sm = vis.size();
			}
		}
		printf("%d\n", sq);
	}
	return 0;
}
