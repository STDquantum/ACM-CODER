#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <map>
//#include <unordered_map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 500*100;
char a[MAXN], s[MAXN];
double num[MAXN];
int L;

double get_num(char *s, int &len)
{
	double ans;
	sscanf(s,"%lf", &ans);
	len = 0;
	while('.' == (*s) || isdigit(*s)) s++, len++;
	return ans;
}
int sum;
double dfs()
{
	if('#' == s[sum])
		return num[sum];
	char op = s[sum];
	double a,b;
	if(sum+1 < L) sum++,a = dfs();
	if(sum+1 < L) sum++,b = dfs();
	switch(op)
	{
	case '+':return a+b;
	case '-':return a-b;
	case '*':return a*b;
	case '/':return a/b;
	}
}
int main()
{
#ifdef SHY
	freopen("e:\\1.txt", "r", stdin);
#endif
	while(gets(a))
	{
		int n = strlen(a), len = 0;
		rep(i,0,n)
		{
			if(isdigit(a[i]))
			{
				int nlen;
				s[len] = '#';
				num[len++] = get_num(a+i,nlen);
				i += nlen;
			}
			else if(' ' != a[i])
				s[len++] = a[i];
		}
		s[len] = 0;
		L = strlen(s);
		sum = 0;
		printf("%.2lf\n", dfs());
	}
	return 0;
}
