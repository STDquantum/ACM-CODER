#include <cstdio>
#include <cstring>
#include <string>
#include <vector>
#include <algorithm>
using namespace std;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define clc(a,b) memset(a,b,sizeof(a))
#define MAXN 1010
string a[MAXN];
int p[MAXN], n, in[30], out[30];
bool vis[MAXN];

bool dfs(char ch, int sum)
{
	if (sum == n)
		return true;
	int l = 0, r = n - 1, mid;
	while (l <= r)
	{
		mid = (l + r) >> 1;
		if (a[mid][0] == ch) break;
		else if (a[mid][0] < ch) l = mid + 1;
		else r = mid - 1;
	}
	if (l > r) return false;
	while (mid >= 0 && ch == a[mid][0]) mid--;
	for (int i = mid + 1; ch == a[i][0]; i++)
	{
		if (!vis[i])
		{
			p[sum] = i;
			vis[i] = true;
			if (dfs(a[i][a[i].length() - 1], sum + 1))
				return true;
			vis[i] = false;
		}
	}
	return false;
}
int ok()
{
	int c = 0, d = 0, s = -1;
	sort(a, a + n);
	rep(i, 0, 26)
	{
		if (in[i] - out[i] == 1) c++,s = i;
		else if (out[i] - in[i] == 1) d++;
		else if (abs(in[i] - out[i]) > 1) return -1;
	}
	if (!(0 == c + d || (1 == c && 1 == d))) return -1;
	if (0 == c + d)
	{
		rep(i, 0, 26)
		{
			if (out[i])
			{
				s = i;
				break;
			}
		}
	}
	if (-1 == s) return -1;
	clc(vis, 0);
	if (dfs(s + 'a', 0)) return s;
	return -1;
}
int main()
{
#ifdef SHY
	freopen("e:\\1.txt", "r", stdin);
#endif
	int t;
	scanf("%d%*c", &t);
	while (t--)
	{
		char ch[35];
		scanf("%d%*c", &n);
		clc(in, 0);
		clc(out, 0);
		rep(i, 0, n)
		{
			scanf("%s%*c", ch);
			a[i] = ch;
			in[a[i][0] - 'a']++;
			out[a[i][a[i].length() - 1] - 'a']++;
		}
		int s = ok();
		if (~s)
		{
			rep(i, 0, n - 1) printf("%s.", a[p[i]].c_str());
			printf("%s\n", a[p[n - 1]].c_str());
		}
		else puts("***");
	}
	return 0;
}