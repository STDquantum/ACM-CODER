#include <cstdio>
#include <cstring>
#define MAXN 10
typedef long long LL;
int h,w, i;
LL dp[MAXN+1][1<<9];
//dp[i][s]表示前i-1行全部填满第i行状态为s时有多少种方案

//b:i行当前这一列有没有被占，b1:i-1行当前这一列有没有被占
void dfs(int j, int s1, int s2, int b1, int b2)
{
	if (j > w)
	{
		if (!b1 && !b2)
			dp[i][s1] += dp[i-1][s2];
		return;
	}
	dfs(j+1,s1<<1|b1,(s2<<1|1)^b2,0,0);//什么都不放
	if (!b1)
	{
		dfs(j+1,s1<<1|1,(s2<<1|1)^b2,1,0);
		dfs(j+1,s1<<1|1,(s2<<1|1)^b2,1,1);
		if (!b2)
		{
			dfs(j+1,s1<<1|1,s2<<1,0,0);
			dfs(j+1,s1<<1|1,s2<<1,1,0);
			dfs(j+1,s1<<1|1,s2<<1,0,1);
		}
	}
	if (!b2)
		dfs(j+1,s1<<1|b1,s2<<1,1,1);
}
int main()
{
#ifdef SHY
	freopen("e:\\1.txt","r",stdin);
#endif
	while(~scanf("%d %d%*c", &h, &w))
	{
		if (h < w)
		{
			h ^= w;
			w ^= h;
			h ^= w;
		}
		memset(dp,0,sizeof(dp));
		dp[0][(1<<w)-1] = 1;
		for (i = 1; i <= h; i++)
			dfs(1,0,0,0,0);
		printf("%lld\n", dp[h][(1<<w)-1]);
	}
	return 0;
}