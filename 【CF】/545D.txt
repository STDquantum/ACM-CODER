#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <List>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 100000+10;
int a[MAXN], sum[MAXN];
list<int> l;

inline bool cmp(int x, int y)
{
	return abs(x-y);
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int n;
	while(~scanf("%d%*c", &n))
	{
		repe(i,1,n)
		{
			scanf("%d%*c", &a[i]);
			sum[i] = sum[i-1]+a[i];
		}
		sort(a+1,a+1+n);
		int cnt = 0, w = 0;
		repe(i,1,n)
		{
			if(a[i] < w)
			{
				int tmp = i;
				i = lower_bound(a+1+i,a+1+n,w)-a;
				cnt += i-tmp;
				//w += sum[i-1]-sum[tmp-1];
				//i--;
			}
			w += a[i];
		}
		printf("%d\n", n-cnt);
	}
	return 0;
}