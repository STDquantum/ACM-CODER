#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 1000+10;
int a[MAXN],len, m,n,k,p,x,y, sum;

void insert(int v)
{
	if(!len) a[len++] = v;
	else
	{
		int k = upper_bound(a,a+len,v)-a;
		per(i,len-1,k)
			a[i+1] = a[i];
		a[k] = v;
		len++;
	}
	sum += v;
}
vector<int> ans;
bool sloved()
{
	int cnt = n-k;
	ans.clear();
	if(x > y) return false;
	if(1 == n)
	{
		if(0 == len)
		{
			ans.push_back(x);
			return p >= x;
		}
		return sum <= x && a[m] >= x;
	}
	while(cnt)
	{
		if(len < m) insert(1),ans.push_back(1);
		else
		{
			if(a[len/2-1] >= x) insert(1),ans.push_back(1);
			else insert(x),ans.push_back(x);
		}
		if(sum > y) return false;
		cnt--;
	}
	return sum <= y && a[m] >= x;
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	while(~scanf("%d %d %d %d %d", &n, &k, &p, &y, &x))
	{
		m = n/2;
		len = sum = 0;
		rep(i,0,k)
		{
			int v;
			scanf("%d%*c", &v);
			insert(v);
		}
		ans.clear();
		if(!sloved()) puts("-1");
		else
		{
			rep(i,0,ans.size()) printf("%d ",ans[i]);
			putchar('\n');
		}
	}
	return 0;
}

