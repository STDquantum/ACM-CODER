#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 500+10,f[4][2]={{-1,0},{1,0},{0,-1},{0,1}};
struct NODE{
	int x,y;
};
int n,m, si, sj, ei, ej, a[MAXN][MAXN];

bool sloved()
{
	queue<NODE> q;
	q.push({si,sj});
	//a[si][sj]++;
	while(!q.empty())
	{
		NODE now = q.front();q.pop();
		rep(i,0,4)
		{
			int ni = now.x+f[i][0], nj = now.y+f[i][1];
			if(0 <= ni && n > ni && 0 <= nj && m > nj)
			{
				if(a[ni][nj] < 1)
				{
					a[ni][nj]++;
					q.push({ni,nj});
				}
				else if(a[ni][nj] == 1)
				{
					if(ni == ei && nj == ej) return true;
					continue;
				}
			}
		}
	}
	return false;
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	while(~scanf("%d %d%*c",&n, &m))
	{
		rep(i,0,n)
		{
			rep(j,0,m)
			{
				int c = getchar();
				if(c == '.') a[i][j] = 0;
				else a[i][j] = 1;
			}
			getchar();
		}
		scanf("%d %d %d %d", &si, &sj, &ei, &ej);
		si--,sj--,ei--,ej--;
		if(sloved()) puts("YES");
		else puts("NO");
	}
	return 0;
}