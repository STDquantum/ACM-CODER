#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 100000+10;
int sot[MAXN],n,k;
vector<int> g[MAXN];

inline int get_id(int v){return lower_bound(sot,sot+n,v)-sot;}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	while(~scanf("%d %d", &n, &k))
	{
		int cnt = 0;
		rep(i,0,k)
		{
			int len;
			scanf("%d", &len);
			g[i].clear();
			rep(j,0,len)
			{
				int v;
				scanf("%d", &v);
				g[i].push_back(v);
				sot[cnt++] = v;
			}
		}
		sort(sot,sot+n);
		cnt = n;
		rep(i,0,k)
		{
			int sz = g[i].size();
			if(sz && get_id(g[i][0]) == 0)
			{
				rep(j,1,sz)
				{
					if(get_id(g[i][j-1])+1 == get_id(g[i][j]))
						cnt--;
					else break;
				}
			}
		}
		printf("%d\n", cnt-k+cnt-1);
	}
	return 0;
}
