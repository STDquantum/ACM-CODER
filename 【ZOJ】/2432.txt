#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define MAXN 510
struct NODE{//¼ÇÂ¼Â·¾¶
    int x, y;
}f[MAXN][MAXN];
int a[MAXN], b[MAXN], dp[MAXN][MAXN], ex, ey;

void pt(int i, int j)
{
    if (!i || !j)
        return;
    int x = f[i][j].x, y = f[i][j].y;
    pt(x,  y);
    if (dp[x][y]+1 == dp[i][j])
    {
        printf ("%d", b[j]);
        if (i != ex && j != ey)
            printf (" ");
    }
}
int main ()
{
    #ifdef SHY
        freopen("e:\\1.txt", "r", stdin);
    #endif
    int t;
    scanf ("%d%*c", &t);
    while(t--)
    {
        int na, nb, ans = 0;
        ex = 0, ey = 0;
        scanf ("%d%*c", &na);
        for (int i = 1; i <= na; i++)
            scanf ("%d%*c", &a[i]);
        scanf ("%d%*c", &nb);
        for (int i = 1; i <= nb; i++)
            scanf ("%d%*c", &b[i]);
        memset(dp,0,sizeof(dp));
        memset(f,0,sizeof(f));
        for (int i = 1; i <= na; i++)
        {
            for (int j = 1; j <= nb; j++)
            {
                if (a[i] == b[j])
                {
                    dp[i][j] = 1;
                    for (int k = 1; k < j; k++)
                    {
                        if (b[k] < b[j] && dp[i][j] < dp[i-1][k]+1)
                            dp[i][j]= dp[i-1][k]+1, f[i][j].x = i-1,f[i][j].y = k;
                    }
                    if (ans < dp[i][j])
                        ans = dp[i][j], ex = i, ey = j;
                }
                else
                    dp[i][j] = dp[i-1][j], f[i][j].x = i-1, f[i][j].y = j;
            }
        }
        printf ("%d\n", ans);
        pt(ex,ey);
        printf ("\n");
        if (t)
            printf ("\n");
    }
    return 0;
}
