#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
#include <map>
//#include <unordered_map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 500+10;
struct NODE{
	double sum;
	char name[35];
	bool operator<(const NODE t)const{
		if(fabs(sum-t.sum) > 1e-8)
		{
			return sum > t.sum;
		}
		return strcmp(name,t.name) < 0;
	}
}p[MAXN];
set<int> mms, osc;
map<string,int> team;

bool is_prime(int x)
{
	if(0 == x || 1 == x) return false;
	int mx = sqrt(x+0.5);
	repe(i,2,mx)
	{
		if(0 == x%i) return false;
	}
	return true;
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int t;
	scanf("%d%*c", &t);
	while(t--)
	{
		int n,m;
		scanf("%d %d%*c", &n, &m);
		mms.clear();
		osc.clear();
		int len;
		scanf("%d%*c", &len);
		rep(i,0,len)
		{
			int id;
			scanf("%d%*c", &id);
			mms.insert(id);
		}
		scanf("%d%*c", &len);
		rep(i,0,len)
		{
			int id;
			scanf("%d%*c", &id);
			osc.insert(id);
		}
		int q;
		scanf("%d%*c", &q);
		team.clear();
		rep(i,0,q)
		{
			char name[35];
			int v;
			scanf("%s %d%*c", name,&v);
			team[name] = v;
		}
		rep(i,0,n)
		{
			char t_name[35], sex[10];
			int sum_p, c;
			scanf("%s %s %s %d %d%*c", p[i].name,t_name,&sex, &sum_p,&c);
			double &ans = p[i].sum = 0;
			if(team.find(t_name) != team.end())
			{
				int v = team[t_name];
				if(1 == v) ans += 36;
				if(2 == v) ans += 27;
				if(3 == v) ans += 18;
			}
			if('F' == sex[0]) ans += 33;
			rep(i,0,sum_p)
			{
				int id;
				scanf("%d%*c", &id);
				if(mms.find(id) != mms.end()) ans += 2.5;
				else if(osc.find(id) != osc.end()) ans += 1.5;
				else if(is_prime(id)) ans += 1;
				else ans += 0.3;
			}
			double r[1000+10];
			rep(i,0,c)
			{
				scanf("%lf%*c", &r[i]);
			}
			if(c >= 3)
			{
				sort(r,r+c);
				ans += max(0.0,(r[c-3] - 1200.0)/100.0)*1.5;
			}
		}
		/*n++;
		p[5].sum = 33;
		strcpy(p[5].name,"BB");*/
		sort(p,p+n);
		rep(i,0,m) printf("%s %.3lf\n", p[i].name,p[i].sum);
	}
	return 0;
}
