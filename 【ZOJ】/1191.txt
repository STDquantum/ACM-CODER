#include <stdio.h>
#include <string.h>
#include <algorithm>
#define MAX 60
using namespace std;
int m,h, temp;
char g[MAX][MAX],ans[1000];

void dfs2(int si, int sj)
{
	g[si][sj] = '*';
	int d[4][2] = {{-1,0},{1,0},{0,-1},{0,1}}, ni, nj;
	for (int i = 0; i < 4; i++)
	{
		ni = d[i][0]+si;
		nj = d[i][1]+sj;
		if (0 <= ni && h > ni && 0 <= nj && m > nj && 'X' == g[ni][nj])
			dfs2(ni, nj);
	}
}

void dfs(int si, int sj)
{
	g[si][sj] = '.';
	int d[4][2] = {{-1,0},{1,0},{0,-1},{0,1}}, ni, nj;
	for (int i = 0; i < 4; i++)
	{
		ni = d[i][0]+si;
		nj = d[i][1]+sj;
		if (0 <= ni && h > ni && 0 <= nj && m > nj)
		{
			if ('X' == g[ni][nj])
			{
				dfs2(ni, nj);
				ans[temp]++;
			}
			if ('*' == g[ni][nj])
				dfs(ni, nj);			
		}		
	}
}

int main ()
{
	int count = 0;
	while(1)
	{
		scanf("%d %d%*c", &m, &h);
		if (0 == m && 0 == h)
			break;
		for (int i = 0; i < h; i++)
		{
			for (int j = 0; j < m; j++)
			{
				g[i][j] = getchar();
			}
			getchar();
		}
		memset(ans,0,sizeof(ans));
		temp = 0;
		for (int i = 0; i < h; i++)
		{
			for (int j = 0; j < m; j++)
			{
				if ('*' == g[i][j])
				{
					dfs(i, j);
					temp++;
				}
			}
		}
		sort(ans, ans+temp);
		printf ("Throw %d\n", ++count);
		for (int i = 0; i < temp; i++)
		{
			printf ("%d", ans[i]);
			if (i != temp-1)
				printf (" ");
		}
		printf ("\n\n");
	}

	return 0;
}