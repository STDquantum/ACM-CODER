#include <stdio.h>
#include <string.h>
#define MAXG 85
struct NODE{
	int a[3], s;
}g[MAXG];
int n, maxs;
bool vis[MAXG] = {0}, visp[10] = {0};

void dfs(int, int);
int main ()
{
#ifdef DSHY
	freopen("e:\\1.txt","r",stdin);
#endif
	int t = 0;
	while(1)
	{
		scanf ("%d", &n);
		if (!n)
			break;
		for (int i = 0; i < n; i++)
			scanf ("%d %d %d %d%*c", &g[i].a[0], &g[i].a[1],&g[i].a[2], &g[i].s);
		maxs = -1;
		dfs(0, 0);
		printf ("Case %d: %d\n", ++t, maxs);
	}
	return 0;
}

bool is_people_same(int s)
{
	for (int i = 0; i < 3; i++)
	{
		if (visp[g[s].a[i]])
			return true;
	}
	return false;
}
void dfs(int p, int sum)
{
	if (3 == p)
	{
		if (sum > maxs)
			maxs = sum;
		return;
	}
	for (int i = 0; i < n; i++)
	{
		if (!vis[i] && !is_people_same(i))
		{
			vis[i] = true;
			visp[g[i].a[0]] = visp[g[i].a[1]] = visp[g[i].a[2]] = true;
			dfs(p+1,sum+g[i].s);
			vis[i] = false;
			visp[g[i].a[0]] = visp[g[i].a[1]] = visp[g[i].a[2]] = false;
		}
	}
}