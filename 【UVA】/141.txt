#include <stdio.h>
#include <string.h>
#include <string>
#include <map>
using namespace std;
#define MAXN 52
struct MOVE{
	bool add;
	int i, j;
}mov[MAXN*2];
char g[MAXN*MAXN], val[4][MAXN*MAXN];
map <string, bool> vis;
int n, d[4] = {0,1,2,3};

void sloved();
int main ()
{
#ifdef DSHY
	freopen("e:\\1.txt","r",stdin);
#endif
	while(1)
	{
		scanf ("%d%*c", &n);
		if (!n)
			break;
		int a, b;
		char c;
		for (int i = 0; i < (n<<1); i++)
		{
			scanf ("%d %d %c%*c", &a, &b, &c);
			mov[i].i = a-1;
			mov[i].j = b-1;
			if ('+' == c)
				mov[i].add = true;
			else
				mov[i].add = false;
		}
		memset(g,1,sizeof(g));
		g[n*n] = 0;
		sloved();
	}
	return 0;
}

void trun (char *buf, int s)
{
	switch (s)
	{
	case 0:	strcpy(buf,g);break;
	case 1:
		{
			for (int i = 0; i < n; i++)
				for (int j = 0; j < n; j++)
					buf[j*n+n-i-1] = g[i*n+j];
			break;
		}
	case 2:
		{
			for (int i = 0; i < n; i++)
				for (int j = 0; j < n; j++)
					buf[(n-j-1)*n+i] = g[i*n+j];
			break;
		}
	case 3:
		{
			for (int i = 0; i < n; i++)
				for (int j = 0; j < n; j++)
					buf[(n-i-1)*n+n-j-1] = g[i*n+j];
			break;
		}
	}
}
bool is_vis()
{
	for (int i = 0; i < 4; i++)
	{
		trun(val[i],i);
		if (vis.end() != vis.find(string(val[i])))
			return true;
	}
	for (int i = 0; i < 4; i++)
		vis[string(val[i])] = true;
	return false;
}
void sloved()
{
	vis.clear();
	vis[string(g)] = true;
	for (int i = 0; i < (n<<1); i++)
	{
		if (mov[i].add)
			g[mov[i].i*n+mov[i].j] = 2;
		else
			g[mov[i].i*n+mov[i].j] = 1;
		if (is_vis())
		{
			if ((i+1)&1)
				printf ("Player 2 wins on move %d\n",i+1);
			else
				printf ("Player 1 wins on move %d\n",i+1);
			return;
		}
	}
	printf ("Draw\n");
}