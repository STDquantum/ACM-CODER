#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define MAXN 55
int a[MAXN], dp[MAXN][MAXN];

int main()
{
#ifdef SHY
	freopen("e:\\1.txt", "r", stdin);
#endif
	int L;
	while (~scanf("%d%*c", &L) && L)
	{
		int n;
		scanf("%d%*c", &n);
		a[0] = 0, a[n + 1] = L;
		for (int i = 1; i <= n; i++)
			scanf("%d%*c", &a[i]);
		memset(dp, 0x3f, sizeof(dp));
		for (int i = 0; i <= n; i++)
			dp[i][i + 1] = 0;
		n += 2;
		for (int i = n - 3; i >= 0; i--)
		{
			for (int j = i + 2; j < n; j++)
			{
				for (int k = i + 1; k < j; k++)
					dp[i][j] = min(dp[i][j], dp[i][k] + dp[k][j]);
				dp[i][j] += a[j] - a[i];
			}
		}
		printf("The minimum cutting is %d.\n", dp[0][n - 1]);
	}
	return 0;
}