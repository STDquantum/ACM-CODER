#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define MAXN 110
#define INF 0x3f3f3f3f
int dp[MAXN][MAXN];

int main()
{
#ifdef SHY
	freopen("e:\\1.txt", "r", stdin);
#endif
	int n, m, q, count = 0;
	while(~scanf("%d %d %d%*c", &n, &m, &q) && n + m + q)
	{
		int a, b, c;
		memset(dp, 0x3f, sizeof(dp));
		for(int i = 0; i < m; i++)
		{
			scanf("%d %d %d%*c", &a, &b, &c);
			dp[a][b] = dp[b][a] = c;
		}
		for(int i = 1; i <= n; i++) dp[i][i] = 0;
		for(int k = 1; k <= n; k++)
		{
			for(int i = 1; i <= n; i++)
			{
				for(int j = 1; j <= n; j++)
				{
					int buf = max(dp[i][k], dp[k][j]);
					dp[i][j] = min(dp[i][j], buf);
				}
			}
		}
		if(count) putchar('\n');
		printf("Case #%d\n", ++count);
		for(int i = 0; i < q; i++)
		{
			scanf("%d %d%*c", &a, &b);
			if(INF != dp[a][b]) printf("%d\n", dp[a][b]);
			else puts("no path");
		}
	}
	return 0;
}
