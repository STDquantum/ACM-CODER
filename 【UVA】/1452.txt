/*Ïß¶ÎÊ÷*/
#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 500000+10;
int sum[MAXN<<1], ans[MAXN];

inline int id(int x, int y){return x+y|x!=y;}
void push_up(int x, int y, int m){
	sum[id(x,y)] = sum[id(x,m)]+sum[id(m+1,y)];
}
void bulid(int x, int y)
{
	if(x == y)
	{
		sum[id(x,y)] = 1;
		return;
	}
	int m = (x+y)>>1;
	bulid(x,m);
	bulid(m+1,y);
	push_up(x,y,m);
}
int find_k(int x, int y, int k)
{
	if(x == y)
	{
		sum[id(x,y)] = 0;
		return x;
	}
	int m = (x+y)>>1, d = sum[id(x,m)], ans;
	if(d >= k) ans =  find_k(x,m,k);
	else ans =  find_k(m+1,y,k-d);
	push_up(x,y,m);
	return ans;
}
int query(int x, int y, int ql, int qr)
{
	if(ql <= x && y <= qr) return sum[id(x,y)];
	int m = (x+y)>>1, ans = 0;
	if(ql <= m) ans += query(x,m,ql,qr);
	if(qr > m) ans += query(m+1,y,ql,qr);
	return ans;
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int t;
	scanf("%d", &t);
	while(t--)
	{
		int n,k;
		scanf("%d %d", &n, &k);
		bulid(0,n-1);
		int cnt = n, p = k%n, tk = k;
		if(0 == p) p = n;
		while(cnt)
		{
			int v = find_k(0,n-1,p);
			ans[cnt--] = v;
			if(0 == cnt) break;
			k = tk%cnt;
			if(k == 0) k = cnt;
			if(p+k-1 <= cnt) p = p+k-1;
			else p = k-query(0,n-1,v,n);
		}
		printf("%d %d %d\n", ans[3]+1,ans[2]+1,ans[1]+1);
	}
	return 0;
}
==========================================================================
/*µÝÍÆ*/
#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f;

int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int t;
	scanf("%d", &t);
	while(t--)
	{
		int n,k;
		scanf("%d %d", &n, &k);
		int now = (2+k)%3;
		repe(i,4,n) now = (now+k)%i;
		printf("%d ", now+1);
		now = (1+k)%2;
		repe(i,3,n) now = (now+k)%i;
		printf("%d ", now+1);
		now = 0;
		repe(i,2,n) now = (now+k)%i;
		printf("%d\n", now+1);
	}
	return 0;
}
