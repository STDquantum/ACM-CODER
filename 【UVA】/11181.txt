#include <cstdio>
#include <cstring>
#define MAXN 21
double p[MAXN], tot, sum[MAXN];
int n,r;

void dfs(int s, int cnt, int num)
{
	if(n == cnt)
	{
		if(num == r)
		{
			double buf = 1;
			for(int i = 0; i < n; i++)
			{
				if((s>>i)&1)
					buf *= p[i];
				else buf *= 1-p[i];
			}
			tot += buf;
			for(int i = 0; i < n; i++)
			{
				if((s>>i)&1)
					sum[i] += buf;
			}
		}
		return;
	}
	if(num+n-cnt >= r)
		dfs(s<<1, cnt+1,num);
	if(num <= r)
		dfs(s<<1|1,cnt+1,num+1);
}
int main()
{
#ifdef SHY
	freopen("e:\\1.txt", "r", stdin);
#endif
	int count = 0;
	while(~scanf("%d %d%*c", &n, &r) && n+r)
	{
		tot = 0;
		memset(sum,0,sizeof(sum));
		for(int i = 0; i < n; i++)
			scanf("%lf%*c", &p[i]);
		dfs(0,0,0);
		printf("Case %d:\n", ++count);
		for(int i = 0; i < n; i++)
			printf("%.6lf\n", sum[i]/tot);
	}
	return 0;
}