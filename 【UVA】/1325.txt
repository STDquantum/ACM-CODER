#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 1000+10;
struct NODE{
	int x,y,z, type;
}p[MAXN];
struct S{
	int u,v,dis;
	bool operator<(const S&t)const{
		return dis < t.dis;
	}
}s[MAXN*MAXN];
int na[MAXN];//na+和na-的差,na<0时表示星球不稳定

inline int get_dis(int a, int b)
{
	return (p[a].x-p[b].x)*(p[a].x-p[b].x)+(p[a].y-p[b].y)*(p[a].y-p[b].y)+(p[a].z-p[b].z)*(p[a].z-p[b].z);
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int n;
	while(~scanf("%d%*c", &n))
	{
		rep(i,0,n) scanf("%d %d %d %d%*c", &p[i].x, &p[i].y, &p[i].z, &p[i].type);
		int cnt = 0;
		rep(i,0,n)
		{
			na[i] = 1;
			rep(j,i+1,n)
				s[cnt++] = {i,j,get_dis(i,j)};
		}
		sort(s,s+cnt);
		int ans = 0, tmp = 0, r = 0;
		rep(i,0,cnt)
		{
			int u = s[i].u, v = s[i].v;
			if(p[u].type == p[v].type)
			{
				if(++na[u] == 0) tmp--;
				if(++na[v] == 0) tmp--;
			}
			else
			{
				if(--na[u] == -1) tmp++;
				if(--na[v] == -1) tmp++;
			}
			if(i != cnt-1 && s[i].dis == s[i+1].dis) continue;
			if(tmp > ans)
			{
				ans = tmp;
				r = s[i].dis;
			}
		}
		printf("%d\n%.4f\n", ans,sqrt((double)r));
	}
	return 0;
}
