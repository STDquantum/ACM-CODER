#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define MAXN 110
char a[MAXN];
int dp[MAXN][MAXN];

void pt(int i, int j)
{
	if (i > j) return;
	if (i == j)
	{
		if ('(' == a[i] || ')' == a[i]) printf("()");
		else printf("[]");
		return;
	}
	if ((('(' == a[i] && ')' == a[j]) || ('[' == a[i] && ']' == a[j])) && dp[i][j] == dp[i + 1][j - 1])
	{
		printf("%c", a[i]);
		pt(i+1,j-1);
		printf("%c", a[j]);
		return;
	}
	for (int k = i; k < j; k++)
	{
		if (dp[i][j] == dp[i][k] + dp[k + 1][j])
		{
			pt(i, k), pt(k + 1, j);
			return;
		}
	}
}
int main()
{
#ifdef SHY
	freopen("e:\\1.txt", "r", stdin);
#endif
	int t;
	scanf("%d%*c%*c", &t);
	while (t--)
	{
		gets(a);
		getchar();
		int n = strlen(a);
		memset(dp,0x3f,sizeof(dp));
		for (int i = 0; i < n; i++)
			dp[i][i] = 1, dp[i+1][i] = 0;
		for (int i = n - 2; i >= 0; i--)
		{
			for (int j = i + 1; j < n; j++)
			{
				if (('(' == a[i] && ')' == a[j]) || ('[' == a[i] && ']' == a[j]))
					dp[i][j] = min(dp[i][j], dp[i+1][j-1]);
				for (int k = i; k < j; k++)
					dp[i][j] = min(dp[i][j], dp[i][k]+dp[k+1][j]);
			}
		}
		pt(0,n-1);
		printf("\n");
		if (t)
			puts("");
	}
	return 0;
}