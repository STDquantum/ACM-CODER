#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 200+10;
int dp[MAXN][MAXN], a[MAXN], g[MAXN][MAXN];

int cost(int u, int v)
{
	if(u == v || g[u][v]) return 0;
	return 1;
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int t;
	scanf("%d", &t);
	while(t--)
	{
		clc(g,0);
		int n,m;
		scanf("%d %d", &n, &m);
		rep(i,0,m)
		{
			int u,v;
			scanf("%d %d", &u, &v);
			g[u][v] = g[v][u] = true;
		}
		int len;
		scanf("%d",&len);
		repe(i,1,len) scanf("%d", &a[i]);
		clc(dp,0x3f);
		clc(dp[0],0);
		repe(i,1,len)
		{
			repe(j,1,n)
			{
				repe(k,1,n)
				{
					int tmp = cost(k,j)+(!(a[i] == j));
					dp[i][j] = min(dp[i][j],dp[i-1][k]+tmp);
				}
			}
		}
		int ans = INF;
		repe(i,1,n)
			ans = min(ans,dp[len][i]);
		printf("%d\n", ans);
	}
	return 0;
}
