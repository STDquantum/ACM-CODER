#include <stdio.h>
#include <math.h>
struct computer{
	double x, y;
}pc[8];
int n, t = 0, ans[8], temp[8];
double min;
bool vis[8] = {0};

void dfs(int p, double sum)
{
	if (p == n)
	{
		if (min > sum)
		{
			min = sum;
			for (int i = 0; i < 8; i++)
				ans[i] = temp[i];
		}
		return;
	}
	for (int i = 0; i < n; i++)
	{
		if (!vis[i])
		{
			int s = temp[p-1];
			double buf = 16+(sqrt)((pc[s].x-pc[i].x)*(pc[s].x-pc[i].x)+(pc[s].y-pc[i].y)*(pc[s].y-pc[i].y));
			if (buf+sum > min)
				continue;
			temp[p] = i;
			vis[i] = true;
			dfs(p+1,sum+buf);
			vis[i] = false;
		}
	}
}
int main ()
{
#ifdef DSHY
	freopen("e:\\1.txt","r",stdin);
#endif
	while(EOF != scanf ("%d%*c", &n) && n)
	{
		for (int i = 0; i < n; i++)
			scanf ("%lf %lf%*c", &pc[i].x, &pc[i].y);
		min = 999999;
		for (int i = 0; i < n; i++)
		{
			vis[i] = true;
			temp[0] = i;
			dfs(1, 0);
			vis[i] = false;
		}
		printf ("**********************************************************\n");
		printf ("Network #%d\n", ++t);
		for (int i = 1; i < n; i++)
		{
			double buf = 16+(sqrt)((pc[ans[i-1]].x-pc[ans[i]].x)*(pc[ans[i-1]].x-pc[ans[i]].x)+(pc[ans[i-1]].y-pc[ans[i]].y)*(pc[ans[i-1]].y-pc[ans[i]].y));
			printf ("Cable requirement to connect (%.lf,%.lf) to (%.lf,%.lf) is %.2lf feet.\n", pc[ans[i-1]].x,pc[ans[i-1]].y,pc[ans[i]].x,pc[ans[i]].y,buf);
		}
		printf ("Number of feet of cable required is %.2lf.\n", min);
	}

	return 0;
}