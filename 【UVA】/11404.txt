#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 1000+10;
string str[MAXN][MAXN];
char a[MAXN],b[MAXN], ans[MAXN];
int dp[MAXN][MAXN];

int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	while(~scanf("%s", a+1))
	{
		int n = strlen(a+1);
		per(i,n,1) b[n-i+1] = a[i];
		clc(dp,0);
		repe(i,1,n)
		{
			repe(j,1,n)
			{
				if(a[i] == b[j]) 
					dp[i][j] = dp[i-1][j-1]+1, str[i][j] = str[i-1][j-1]+a[i];
				else
				{
					if(dp[i-1][j] > dp[i][j-1])
						dp[i][j] = dp[i-1][j],str[i][j] = str[i-1][j];
					else if(dp[i-1][j] < dp[i][j-1]) dp[i][j] = dp[i][j-1],str[i][j] = str[i][j-1];
					else
					{
						dp[i][j] = dp[i-1][j];
						if(str[i-1][j] < str[i][j-1]) str[i][j] = str[i-1][j];
						else str[i][j] = str[i][j-1];
					}
				}
			}
		}
		strcpy(ans,str[n][n].c_str());
		int cnt = dp[n][n];
		if(cnt&1)
		{
			int len = cnt/2;
			rep(i,0,len) putchar(ans[i]);
			per(i,len,0) putchar(ans[i]);
		}
		else
		{
			int len = cnt/2;
			rep(i,0,len) putchar(ans[i]);
			per(i,len-1,0) putchar(ans[i]);
		}
		putchar('\n');
	}
	return 0;
}
