#include <stdio.h>
#define MAX 80
int g[MAX*3][MAX*3], h, w, max, t, d[4][2] = {{-1,0},{1,0},{0,-1},{0,1}};
bool find;

void dfs(int , int);

int main ()
{
	//freopen_s(&f, "e:\\out.txt","w",stdout);
	int count = 0;
	while(1)
	{
		int hh, ww, ans = 0;
		scanf ("%d %d%*c", &ww, &hh);
		if (0 == ww && 0 == hh)
			break;
		char c;
		h = 3*hh, w = 3*ww;
		for (int i = 0; i < h; i++)
			for (int j = 0; j < w; j++)
				g[i][j] = 0;
		for (int i = 0; i < hh; i++)
		{
			for (int j = 0; j < ww; j++)
			{
				c = getchar();
				if ('\\' == c)
					g[i*3][j*3] = g[i*3+2][j*3+2] = 1;
				else if ('/' == c)
					g[i*3][j*3+2] = g[i*3+2][j*3] = 1;
				g[i*3+1][j*3+1] = 1;
			}
			getchar();
		}
		max = -1;
		for (int i  = 0; i < h; i++)
		{
			for (int j = 0; j < w; j++)
			{
				if (0 == g[i][j])
				{
					find = true;
					t = 0;
					dfs(i, j);
					if (find)
					{
						ans++;
						if (max < t/3)
							max = t/3;
					}
				}
			}
		}
		printf ("Maze #%d:\n", ++count);
		if (ans)
			printf ("%d Cycles; the longest has length %d.\n\n", ans, max);
		else
			printf ("There are no cycles.\n\n");
	}

	return 0;
}

void dfs(int si, int sj)
{
	if (0 == si || 0 == sj || h-1 == si || w-1 == sj) find = false;
	g[si][sj] = 1;
	t++;
	int ni, nj;
	for (int i = 0; i < 4; i++)
	{
		ni = d[i][0]+si;
		nj = d[i][1]+sj;
		if (0 <= ni && h > ni && 0 <= nj && w > nj && 0 == g[ni][nj])
				dfs(ni, nj);
	}
}