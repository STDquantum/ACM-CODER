#include <cstdio>
#include <cstring>
#include <vector>
#include <stack>
#include <algorithm>
using namespace std;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
#define MAXN 1010
int pre[MAXN], num[MAXN], sum[MAXN], dp[MAXN], dfs_clock, scc_cnt;
vector<int> g[MAXN], g2[MAXN];
stack<int> s;

int dfs(int u)
{
	int lowu = pre[u] = ++dfs_clock, sz = g[u].size();
	s.push(u);
	rep(i,0,sz)
	{
		int v = g[u][i];
		if(!pre[v]) lowu = min(lowu, dfs(v));
		else if(!num[v]) lowu = min(lowu, pre[v]);
	}
	if(lowu == pre[u])
	{
		int x;
		scc_cnt++;
		do{
			x = s.top(); s.pop();
			num[x] = scc_cnt;
			sum[num[x]]++;
		}while(x != u);
	}
	return lowu;
}
int dfs(int u,int f)
{
	int& ans = dp[u];
	if(~ans) return ans;
	ans = sum[u];
	int sz = g2[u].size();
	rep(i,0,sz)
	{
		int v = g2[u][i];
		ans = max(ans,dfs(v,f)+sum[u]);
	}
	return ans;
}
int main()
{
#ifdef SHY
    freopen("e:\\1.txt","r",stdin);
#endif
	int t;
	scanf("%d%*c", &t);
	while(t--)
	{
		int a,b,n,m;
		scanf("%d %d%*c", &n, &m);
		repe(i,1,n) g[i].clear();
		rep(i,0,m)
		{
			scanf("%d %d%*c", &a, &b);
			g[a].push_back(b);
		}
		dfs_clock = scc_cnt = 0;
		clc(num,0);
		clc(pre,0);
		clc(sum,0);
		repe(i,1,n) if(!pre[i]) dfs(i);
		repe(i,1,scc_cnt) g2[i].clear();
		repe(u,1,n)
		{
			int sz = g[u].size();
			rep(i,0,sz)
			{
				int v = g[u][i];
				if(num[u] != num[v])
					g2[num[u]].push_back(num[v]);
			}
		}
		int ans = 0;
		clc(dp,-1);
		repe(i,1,scc_cnt)
			ans = max(ans, dfs(i,-1));
		printf("%d\n", ans);
	}
	return 0;
}