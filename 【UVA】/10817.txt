/*01±³°ü+×´Ñ¹DP*/
#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 100+10;
int ok[MAXN],cost[MAXN],dp[1<<17];

int nxt_s(int s, int v)
{
	int cnt = 0, tmp = s;
	while(v)
	{
		if(!(cnt&1) && (tmp&(1<<cnt)) && (v&1))
			s |= 1<<(cnt+1);
		else if(v&1 || tmp&(1<<cnt))
			s |= 1<<cnt;
		v >>= 1;
		cnt += 1;
	}
	return s;
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int s,m,n;
	while(~scanf("%d %d %d", &s, &m, &n) && s+m+n)
	{
		int st = 0, sum = 0;
		rep(i,0,m)
		{
			int v;
			char ch;
			scanf("%d", &v);
			sum += v;
			while(~scanf("%d%c", &v,&ch))
			{
				v = (v<<1)-1;
				if(st&(1<<(v-1))) st |= 1<<v;
				else st |= 1<<(v-1);
				if('\n' == ch) break;
			}
		}
		rep(i,0,n)
		{
			int v;
			char ch;
			ok[i] = 0;
			scanf("%d", &cost[i]);
			while(~scanf("%d%c", &v,&ch))
			{
				v = (v<<1)-1;
				if(ok[i]&(1<<(v-1))) ok[i] |= 1<<v;
				else ok[i] |= 1<<(v-1);
				if('\n' == ch) break;
			}
		}
		clc(dp,0x3f);
		dp[st] = sum;
		int ALL = (1<<(s*2))-1;
		rep(i,0,n)
		{
			per(j,ALL,st)
			{
				if(INF == dp[j]) continue;
				int k = nxt_s(j,ok[i]);
				dp[k] = min(dp[k],dp[j]+cost[i]);
			}
		}
		printf("%d\n", dp[ALL]);
	}
	return 0;
}
