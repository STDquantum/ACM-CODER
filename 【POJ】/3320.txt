#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 1000000+10;
int a[MAXN],sot[MAXN],x[MAXN];

int vis[MAXN];
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int n;
	while(~scanf("%d", &n))
	{
		repe(i,1,n) scanf("%d", &a[i]), sot[i] = a[i];
		sort(sot+1,sot+1+n);
		int cnt = unique(sot+1,sot+1+n)-sot-1;
		LL mx = (1+cnt)*(LL)cnt/2;
		repe(i,1,n) x[i] = lower_bound(sot+1,sot+1+cnt,a[i])-sot;
		LL sum = 0;
		int st = 1, mi = INF;
		clc(vis,0);
		repe(i,1,n)
		{
			if(!vis[x[i]]) sum += x[i];
			vis[x[i]]++;
			while(st <= i && sum == mx)
			{
				mi = min(mi,i-st+1);
				if(--vis[x[st++]] == 0)
					sum -= x[st-1];
			}
		}
		printf("%d\n", mi);
	}
	return 0;
}
