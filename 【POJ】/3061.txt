#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 100000;
char buf[MAXN], *ps = buf, *pe = buf+1;
inline void rnext(){
    if(++ps == pe)
        pe = (ps = buf)+fread(buf,1,sizeof(buf),stdin);
}
template <class T>
inline bool in(T &ans)
{
	ans = 0;
    if(ps == pe) return false;
    do{
        rnext();
    }while(!isdigit(*ps) && ps != pe);
    if(ps == pe) return false;
    do
    {
        ans = (ans<<1)+(ans<<3)+*ps-48;
        rnext();
    }while(isdigit(*ps) && ps != pe);
    return true;
}
int a[MAXN];

int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int t;
	in(t);
	while(t--)
	{
		int n,s;
		in(n),in(s);
		repe(i,1,n) in(a[i]);
		int st = 1, mi = INF, sum = 0;
		repe(i,1,n)
		{
			sum += a[i];
			while(st <= i && sum >= s)
			{
				mi = min(mi,i-st+1);
				sum -= a[st++];
			}
		}
		if(INF == mi) puts("0");
		else printf("%d\n", mi);
	}
	return 0;
}
