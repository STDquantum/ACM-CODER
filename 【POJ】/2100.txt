#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <set>
//#include <unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 10000000;
struct NODE{
	int len,st,ed;
	bool operator<(const NODE &t) const{
		return len > t.len;
	}
}ans[MAXN];
int cnt;

int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	LL n;
	while(~scanf("%I64d",&n))
	{
		cnt = 0;
		int st = 1;
		LL sum = 0;
		repe(i,1,MAXN)
		{
			LL tmp = i*(LL)i;
			sum += tmp;
			while(st <= i && sum >= n)
			{
				if(sum == n)
				{
					ans[cnt].len = i-st+1;
					ans[cnt].st = st,ans[cnt++].ed = i;
				}
				sum -= st*(LL)st;
				st++;
			}
			if(tmp > n) break;
		}
		sort(ans,ans+cnt);
		printf("%d\n", cnt);
		rep(i,0,cnt)
		{
			printf("%d", ans[i].len);
			repe(j,ans[i].st,ans[i].ed) printf(" %d", j);
			putchar('\n');
		}
	}
	return 0;
}