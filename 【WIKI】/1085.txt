#include <cstdio>
#include <cstring>
#define MAXN 110
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
int a[MAXN], dp[MAXN][MAXN][10], sum[MAXN][MAXN], n;

int dfs(int l, int r, int m)
{
	int& ans = dp[l][r][m];
	if(~ans) return ans;
	if (1 == m || l >= r)
		return ans = sum[l][r];
	ans = 0;
	for (int k = m+l-2; k < r; k++)//r-l+1-m>=1 ==> r >= m+l-2 
		ans = max(ans,sum[k+1][r]*dfs(l,k,m-1));
	return ans;
}
int dfs2(int l, int r, int m)
{
	int& ans = dp[l][r][m];
	if(~ans) return ans;
	if (1 == m || l >= r)
		return ans = sum[l][r];
	ans = 0x3f3f3f3f;
	for (int k = m+l-2; k < r; k++)
		ans = min(ans,sum[k+1][r]*dfs2(l,k,m-1));
	return ans;
}
int main()
{
#ifdef SHY
	freopen("e:\\1.txt","r",stdin);
#endif
	int m;
	scanf("%d %d%*c", &n, &m);
	for (int i = 0; i < n; i++)
		scanf("%d%*c", &a[i]), a[i+n] = a[i];
	memset(sum,0,sizeof(sum));
	for (int i = 0; i < (n<<1); i++)
	{
		for (int j = i; j < (n<<1) && j < i+n; j++)
		{
			if (j)
				sum[i][j] = sum[i][j-1];
			sum[i][j] = ((sum[i][j]+a[j])%10+10)%10;
		}
	}
	int ans = 0x3f3f3f3f;
	memset(dp,-1,sizeof(dp));
	for (int i = 0; i < n; i++)
		ans = min(ans,dfs2(i,i+n-1,m));
	printf("%d\n", ans);
	ans = 0;
	memset(dp,-1,sizeof(dp));
	for (int i = 0; i < n; i++)
		ans = max(ans,dfs(i,i+n-1,m));
	printf("%d\n", ans);
	return 0;
}