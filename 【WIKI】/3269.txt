#include <cstdio>
#include <algorithm>
using namespace std;
#define MAXN 200010

int main ()
{
    int n, c;
    while(~scanf ("%d %d%*c", &n, &c))
    {
        int w, v, num, dp[MAXN] = {0};
        for (int i = 0; i < n; i++)
        {
            scanf ("%d %d %d%*c", &w, &v, &num);
            if (1 == num)
            {
                for (int j = c; j >= w; j--)
                    dp[j] = max(dp[j], dp[j-w]+v);
            }
            else if (-1 == num)
            {
                for (int j = w; j <= c; j++)
                    dp[j] = max(dp[j], dp[j-w]+v);
            }
            else
            {
                if (num*w >= c)
                {
                    for (int j = w; j <= c; j++)
                        dp[j] = max(dp[j], dp[j-w]+v);
                    continue;
                }
                for (int j = 1; j <= num; num -= j, j <<= 1)
                {
                    int wg = j*w, val = j*v;
                    for (int k = c; k >= wg; k--)
                        dp[k] = max(dp[k], dp[k-wg]+val);
                }
                if (num > 0)
                {
                    int wg = num*w, val = num*v;
                    for (int k = c; k >= wg; k--)
                        dp[k] = max(dp[k], dp[k-wg]+val);
                }
            }
        }
        printf ("%d\n", dp[c]);
    }
    return 0;
}
