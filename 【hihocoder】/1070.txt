#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <map>
//#include <unordered_map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 10000+10;
int mi[MAXN<<1];

inline int id(int x, int y){
	return x+y|x!=y;
}
inline void push_up(int x, int y, int m)
{
	mi[id(x,y)] = min(mi[id(x,m)], mi[id(m+1,y)]);
}
void bulid(int x, int y)
{
	if(x == y) return;
	int m = (x+y)>>1;
	bulid(x,m);
	bulid(m+1,y);
	push_up(x,y,m);
}
void update(int x, int y, int p, int v)
{
	if(x == y)
	{
		mi[id(x,y)] = v;
		return;
	}
	int m = (x+y)>>1;
	if(p <= m) update(x,m,p,v);
	else update(m+1,y,p,v);
	push_up(x,y,m);
}
int query(int x, int y, int ql, int qr)
{
	if(ql <= x && y <= qr) return mi[id(x,y)];
	int m = (x+y)>>1, ans = INF;
	if(ql <= m) ans = min(ans, query(x,m,ql,qr));
	if(qr > m) ans = min(ans, query(m+1,y,ql,qr));
	return ans;
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int n;
	while(~scanf("%d%*c", &n))
	{
		repe(i,1,n) scanf("%d%*c", &mi[id(i,i)]);
		bulid(1,n);
		int q;
		scanf("%d%*c", &q);
		rep(i,0,q)
		{
			int op,x,y;
			scanf("%d %d %d%*c", &op,&x, &y);
			if(op) update(1,n,x,y);
			else printf("%d\n", query(1,n,x,y));
		}
	}
	return 0;
}
