#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <map>
//#include <unordered_map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 26+10;
struct NODE{
	NODE *ch[2];
	NODE(){
		ch[0] = ch[1] = 0;
	}
	char v;
}node[MAXN];
char a[MAXN], b[MAXN];
int p, pos[MAXN];

void bulid(NODE *&u, int x, int y)
{
	if(x > y) return;
	u = new NODE();
	u->v = a[p++];
	if(x == y) return;
	bulid(u->ch[0],x,pos[u->v-'A']-1);
	bulid(u->ch[1],pos[u->v-'A']+1,y);
}
void pt(NODE *u)
{
	if(NULL == u) return;
	pt(u->ch[0]);
	pt(u->ch[1]);
	putchar(u->v);
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	while(gets(a))
	{
		gets(b);
		int len = strlen(b);
		rep(i,0,len) pos[b[i]-'A'] = i;
		NODE *root = NULL;
		p = 0;
		bulid(root,0,len-1);
		pt(root);
		putchar('\n');
	}
	return 0;
}
