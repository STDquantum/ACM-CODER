#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <map>
//#include <unordered_map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 10000+10, MAXM = 200000+10;
int head[MAXN], nxt[MAXM],to[MAXM],cost[MAXM], tol;

inline void add_edge(int u, int v, int c)
{
	nxt[tol] = head[u], to[tol] = v, cost[tol] = c;
	head[u] = tol++;
}
int dis[MAXN], k,t;
bool vis[MAXN];
queue<int> q;
bool ok(int w)
{
	while(!q.empty()) q.pop();
	clc(vis,0);
	dis[1] = 0;
	vis[1] = 1;
	q.push(1);
	while(!q.empty())
	{
		int u = q.front();q.pop();
		if(dis[u] > k) return false;
		if(u == t) return true;
		for(int i = head[u]; ~i; i = nxt[i])
		{
			int v = to[i];
			if(w >= cost[i] && !vis[v])
			{
				q.push(v);
				vis[v] = 1;
				dis[v] = dis[u]+1;
			}
		}
	}
	return false;
}
int main()
{
#ifdef SHY
	freopen("e:\\1.txt", "r", stdin);
#endif
	int n,m, w = 0;
	scanf("%d %d %d %d", &n, &m, &k, &t);
	tol = 0;
	clc(head,-1);
	rep(i,0,m)
	{
		int u,v,c;
		scanf("%d %d %d", &u, &v, &c);
		add_edge(u,v,c);
		add_edge(v,u,c);
		w = max(w,c);
	}
	int x = 1, y = w, ans;
	while(x <= y)
	{
		m = (x+y)>>1;
		if(ok(m)) ans = m,y = m-1;
		else x = m+1;
	}
	printf("%d\n", ans);
	return 0;
}
