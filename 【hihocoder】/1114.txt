#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <map>
//#include <unordered_map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 100000+10;
int a[MAXN], n, cnt[2][MAXN];
vector<int> yes,no;

bool ok(int p)
{
	clc(cnt[p],0);
	cnt[p][1] = p;
	rep(i,1,n)
	{
		cnt[p][i+1] = a[i]-cnt[p][i-1]-cnt[p][i];
		if(cnt[p][i+1] != 0 && cnt[p][i+1] != 1) return false;
	}
	return a[n] == cnt[p][n-1]+cnt[p][n];
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int t;
	scanf("%d%*c", &t);
	while(t--)
	{
		scanf("%d%*c", &n);
		repe(i,1,n) scanf("%d%*c", &a[i]);
		bool ok1 = false,ok2 = false;
		if(ok(0)) ok1 = true;
		if(ok(1)) ok2 = true;
		yes.clear();no.clear();
		if(ok1 && ok2)
		{
			repe(i,1,n)
			{
				if(cnt[0][i] == cnt[1][i])
				{
					if(cnt[0][i]) yes.push_back(i);
					else no.push_back(i);
				}
			}
		}
		else if(ok1)
		{
			repe(i,1,n)
			{
				if(cnt[0][i]) yes.push_back(i);
				else no.push_back(i);
			}
		}
		else
		{
			repe(i,1,n)
			{
				if(cnt[1][i]) yes.push_back(i);
				else no.push_back(i);
			}
		}
		printf("%d",yes.size());
		rep(i,0,yes.size()) printf(" %d", yes[i]);
		putchar('\n');
		printf("%d",no.size());
		rep(i,0,no.size()) printf(" %d", no[i]);
		putchar('\n');
	}
	return 0;
}
