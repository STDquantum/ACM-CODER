#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <map>
//#include <unordered_map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 1000, MAXM = 10000*2+10;
int head[MAXN], tol, nxt[MAXM], to[MAXM], cost[MAXM];

void add_edge(int u, int v, int c)
{
	nxt[tol] = head[u], to[tol] = v, cost[tol] = c;
	head[u] = tol++;
}
bool inq[MAXN];
int dis[MAXN];
int spfa(int s, int t)
{
	clc(dis,0x3f);
	clc(inq,0);
	queue<int> q;
	dis[s] = 0;
	inq[s] = true;
	q.push(s);
	while(!q.empty())
	{
		int u = q.front();q.pop();
		inq[u] = false;
		for(int i = head[u]; ~i; i = nxt[i])
		{
			int v = to[i];
			if(INF != dis[u] && dis[v] > dis[u]+cost[i])
			{
				dis[v] = dis[u]+cost[i];
				if(!inq[v])
				{
					q.push(v);
					inq[v] = true;
				}
			}
		}
	}
	return dis[t];
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int n,m,s,t;
	scanf("%d %d %d %d%*c", &n, &m, &s, &t);
	clc(head,-1);
	tol = 0;
	rep(i,0,m)
	{
		int u,v,c;
		scanf("%d %d %d%*c", &u, &v, &c);
		add_edge(u,v,c);
		add_edge(v,u,c);
	}
	printf("%d\n", spfa(s,t));
	return 0;
}
