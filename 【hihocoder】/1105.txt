#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <map>
//#include <unordered_map>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 100000+10;
int tree[MAXN], cnt;

inline int fa(int u){return u>>1;}
inline int lc(int u){return u<<1;}
inline int rc(int u){return u<<1|1;}
void add(int v)
{
	tree[++cnt] = v;
	int u = cnt;
	while(1 != u && tree[u] > tree[fa(u)])
	{
		swap(tree[u], tree[fa(u)]);
		u = fa(u);
	}
}
int top()
{
	int ret = tree[1];
	swap(tree[1],tree[cnt--]);
	tree[cnt+1] = -INF;
	int u = 1;
	while(lc(u) <= cnt && tree[u] < max(tree[lc(u)],tree[rc(u)]))
	{
		if(tree[lc(u)] > tree[rc(u)])
		{
			swap(tree[u], tree[lc(u)]);
			u = lc(u);
		}
		else
		{
			swap(tree[u], tree[rc(u)]);
			u = rc(u);
		}
	}
	return ret;
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int q;
	scanf("%d%*c", &q);
	cnt = 0;
	while(q--)
	{
		char op[10];
		scanf("%s", op);
		if('A' == op[0])
		{
			int v;
			scanf("%d%*c", &v);
			add(v);
		}
		else 
			printf("%d\n", top());
	}
	return 0;
}
