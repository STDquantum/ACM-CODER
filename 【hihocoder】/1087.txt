#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 13;
LL dp[1<<MAXN][MAXN];
int g[MAXN][MAXN],n;

LL dfs(int s, int i)
{
	LL &ans = dp[s][i];
	if(~ans) return ans;
	if(0 == (s&(1<<i))) return ans = 0;
	ans = 0;
	rep(j,0,n)
	{
		if(i == j || !g[j][i]) continue;
		ans += dfs(s^(1<<i),j);
	}
	return ans;
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	int m;
	scanf("%d %d", &n, &m);
	clc(g,0);
	rep(i,0,m)
	{
		int u,v;
		scanf("%d %d", &u,&v);
		u--,v--;
		g[u][v] = true;
	}
	clc(dp,-1);
	//rep(i,0,n) dp[1<<i][i] = 1;
	dp[1][0] = 1;
	int all = 1<<n;
	/*rep(s,1,all)
	{
		rep(i,0,n)
		{
			if(0 == (s&(1<<i))) continue;
			rep(j,0,n)
			{
				if(i == j || !g[j][i]) continue;
				dp[s][i] += dp[s^(1<<i)][j];
			}
		}
	}*/
	LL ans = 0;
	rep(i,0,n) if(g[i][0]) ans += dfs(all-1,i);
	printf("%lld\n", ans);
	return 0;
}
