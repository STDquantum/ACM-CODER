#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
#define rep(i,a,n) for(int i = a; i < n; i++)
#define repe(i,a,n) for(int i = a; i <= n; i++)
#define per(i,n,a) for(int i = n; i >= a; i--)
#define clc(a,b) memset(a,b,sizeof(a))
const int INF = 0x3f3f3f3f, MAXN = 100+10,d[4][2]={{-1,0},{1,0},{0,-1},{0,1}};
int n,m,si,sj;
char a[MAXN][MAXN];

int dis[MAXN][MAXN];
struct NODE{
	int x,y;
};
int bfs()
{
	queue<NODE> q;
	q.push(NODE{si,sj});
	clc(dis,0x3f);
	dis[si][sj] = 0;
	while(!q.empty())
	{
		NODE now = q.front();q.pop();
		rep(i,0,4)
		{
			int ni = now.x+d[i][0],nj = now.y+d[i][1];
			//if(ei == ni && ej == nj) return dis[now.x][now.y]+1;
			if(0 <= ni && n > ni && 0 <= nj && m > nj && ('S' == a[ni][nj] || '.' == a[ni][nj]) && INF == dis[ni][nj])
			{
				//if('S' == a[ni][nj] && 'S' == a[now.x][now.y]) continue;
				dis[ni][nj] = dis[now.x][now.y]+1;
				if('.' == a[ni][nj])
					q.push(NODE{ni,nj});
			}
		}
	}
	return INF;
}
int main()
{
#ifdef SHY
	freopen("d:\\1.txt", "r", stdin);
#endif
	scanf("%d %d", &n, &m);
	rep(i,0,n) scanf("%s", a[i]);
	rep(i,0,n)
	{
		rep(j,0,m)
		{
			if('H' == a[i][j])
			{
				si = i;
				sj = j;
				break;
			}
		}
	}
	bfs();
	int ans = INF;
	rep(i,0,n)
	{
		rep(j,0,m)
		{
			if('S' == a[i][j])
			{
				rep(k,0,4)
				{
					int ni = i+d[k][0],nj = j+d[k][1];
					if(0 <= ni && n > ni && 0 <= nj && m > nj && 'S' == a[ni][nj])
					{
						int cost = dis[ni][nj];
						if(INF != cost)
						{
							ans = min(ans,cost+dis[i][j]);
						}
					}
				}
			}
		}
	}
	if(INF == ans) puts("Hi and Ho will not have lunch.");
	else printf("%d\n", ans);
	return 0;
}
